---
subcategory: "License Manager"
layout: "aws"
page_title: "AWS: aws_licensemanager_received_license"
description: |-
    Get information about a set of license manager received license
---

# Data Source: awsLicensemanagerReceivedLicense

This resource can be used to get data on a received license using an ARN. This can be helpful for pulling in data on a license from the AWS marketplace and sharing that license with another account.

## Example Usage

The following shows getting the received license data using and ARN.

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
new aws.dataAwsLicensemanagerReceivedLicense.DataAwsLicensemanagerReceivedLicense(
  this,
  "test",
  {
    licenseArn:
      "arn:aws:license-manager::111111111111:license:l-ecbaa94eb71a4830b6d7e49268fecaa0",
  }
);

```

## Argument Reference

* `licenseArn` - (Required) The ARN of the received license you want data for.

## Attributes Reference

* `id` - The received license ARN (Same as: `licenseArn`).
* `beneficiary` - Granted license beneficiary. This is in the form of the ARN of the root user of the account.
* `consumptionConfiguration` - Configuration for consumption of the license. [Detailed below](#consumption_configuration)
* `createTime` - Creation time of the granted license in RFC 3339 format.
* `entitlements` - License entitlements. [Detailed below](#entitlements)
* `homeRegion` - Home Region of the granted license.
* `issuer` - Granted license issuer. [Detailed below](#issuer)
* `licenseArn` - Amazon Resource Name (ARN) of the license.
* `licenseMetadata`- Granted license metadata. This is in the form of a set of all meta data. [Detailed below](#license_metadata)
* `licenseName` - License name.
* `productName` - Product name.
* `productSku` - Product SKU.
* `receivedMetadata` - Granted license received metadata. [Detailed below](#received_metadata)
* `status` - Granted license status.
* `validity` - Date and time range during which the granted license is valid, in ISO8601-UTC format. [Detailed below](#validity)
* `version` - Version of the granted license.

### consumptionConfiguration

* `borrowConfiguration` - Details about a borrow configuration. [Detailed below](#borrow_configuration)
* `provisionalConfiguration` - Details about a provisional configuration. [Detailed below](#provisional_configuration)
* `renewalFrequency` - Renewal frequency.

#### borrowConfiguration

A list with a single map.

* `allowEarlyCheckIn` - Indicates whether early check-ins are allowed.
* `maxTimeToLiveInMinutes` - Maximum time for the borrow configuration, in minutes.

#### provisionalConfiguration

A list with a single map.

* `maxTimeToLiveInMinutes` - Maximum time for the provisional configuration, in minutes.

### entitlements

A list with a single map.

* `allowCheckIn` - Indicates whether check-ins are allowed.
* `maxCount` - Maximum entitlement count. Use if the unit is not None.
* `name` - Entitlement name.
* `overage` - Indicates whether overages are allowed.
* `unit` - Entitlement unit.
* `value` - Entitlement resource. Use only if the unit is None.

### issuer

A list with a single map.

* `keyFingerprint` - Issuer key fingerprint.
* `name` - Issuer name.
* `signKey` - Asymmetric KMS key from AWS Key Management Service. The KMS key must have a key usage of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.

### licenseMetadata

Each metadata item will have the following attributes.

* `name` - The key name.
* `value` - The value.

### receivedMetadata

A list with a single map.

* `allowedOperations` - A list of allowed operations.
* `receivedStatus` - Received status.
* `receivedStatusReason` - Received status reason.

### validity

A list with a single map.

* `begin` - Start of the validity time range.
* `end` - End of the validity time range.
