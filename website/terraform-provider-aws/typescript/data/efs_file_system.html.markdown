---
subcategory: "EFS (Elastic File System)"
layout: "aws"
page_title: "AWS: aws_efs_file_system"
description: |-
  Provides an Elastic File System (EFS) File System data source.
---

# Data Source: awsEfsFileSystem

Provides information about an Elastic File System (EFS) File System.

## Example Usage

```typescript
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
/*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
You can read more about this at https://cdk.tf/variables*/
const fileSystemId = new cdktf.TerraformVariable(this, "file_system_id", {
  default: "",
});
new aws.dataAwsEfsFileSystem.DataAwsEfsFileSystem(this, "by_id", {
  fileSystemId: fileSystemId.value,
});
new aws.dataAwsEfsFileSystem.DataAwsEfsFileSystem(this, "by_tag", {
  tags: {
    Environment: "dev",
  },
});

```

## Argument Reference

The following arguments are supported:

* `fileSystemId` - (Optional) ID that identifies the file system (e.g., fs-ccfc0d65).
* `creationToken` - (Optional) Restricts the list to the file system with this creation token.
* `tags` - (Optional) Restricts the list to the file system with these tags.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - Amazon Resource Name of the file system.
* `availabilityZoneName` - The Availability Zone name in which the file system's One Zone storage classes exist.
* `availabilityZoneId` - The identifier of the Availability Zone in which the file system's One Zone storage classes exist.
* `dnsName` - DNS name for the filesystem per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
* `encrypted` - Whether EFS is encrypted.
* `kmsKeyId` - ARN for the KMS encryption key.
* `lifecyclePolicy` - File system [lifecycle policy](https://docs.aws.amazon.com/efs/latest/ug/API_LifecyclePolicy.html) object.
* `performanceMode` - File system performance mode.
* `provisionedThroughputInMibps` - The throughput, measured in MiB/s, that you want to provision for the file system.
* `tags` -A map of tags to assign to the file system.
* `throughputMode` - Throughput mode for the file system.
* `sizeInBytes` - Current byte count used by the file system.
