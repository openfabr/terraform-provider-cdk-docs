---
subcategory: "Direct Connect"
layout: "aws"
page_title: "AWS: aws_dx_lag"
description: |-
  Provides a Direct Connect LAG.
---

# Resource: aws\_dx\_lag

Provides a Direct Connect LAG. Connections can be added to the LAG via the [`awsDxConnection`](/docs/providers/aws/r/dx_connection.html) and [`awsDxConnectionAssociation`](/docs/providers/aws/r/dx_connection_association.html) resources.

\~> *NOTE:* When creating a LAG, if no existing connection is specified, Direct Connect will create a connection and Terraform will remove this unmanaged connection during resource creation.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
new aws.dxLag.DxLag(this, "hoge", {
  connectionsBandwidth: "1Gbps",
  forceDestroy: true,
  location: "EqDC2",
  name: "tf-dx-lag",
});

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the LAG.
* `connectionsBandwidth` - (Required) The bandwidth of the individual physical connections bundled by the LAG. Valid values: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps and 100Gbps. Case sensitive.
* `location` - (Required) The AWS Direct Connect location in which the LAG should be allocated. See [DescribeLocations](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeLocations.html) for the list of AWS Direct Connect locations. Use `locationCode`.
* `connectionId` - (Optional) The ID of an existing dedicated connection to migrate to the LAG.
* `forceDestroy` - (Optional, Default:false) A boolean that indicates all connections associated with the LAG should be deleted so that the LAG can be destroyed without error. These objects are *not* recoverable.
* `providerName` - (Optional) The name of the service provider associated with the LAG.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - The ARN of the LAG.
* `hasLogicalRedundancy` - Indicates whether the LAG supports a secondary BGP peer in the same address family (IPv4/IPv6).
* `id` - The ID of the LAG.
* `jumboFrameCapable` -Indicates whether jumbo frames (9001 MTU) are supported.
* `ownerAccountId` - The ID of the AWS account that owns the LAG.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

Direct Connect LAGs can be imported using the `lagId`, e.g.,

```console
$ terraform import aws_dx_lag.test_lag dxlag-fgnsp5rq
```
