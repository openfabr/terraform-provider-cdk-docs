---
subcategory: "Config"
layout: "aws"
page_title: "AWS: aws_config_delivery_channel"
description: |-
  Provides an AWS Config Delivery Channel.
---

# Resource: aws\_config\_delivery\_channel

Provides an AWS Config Delivery Channel.

\~> **Note:** Delivery Channel requires a [Configuration Recorder](/docs/providers/aws/r/config_configuration_recorder.html) to be present. Use of `dependsOn` (as shown below) is recommended to avoid race conditions.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
const awsIamRoleR = new aws.iamRole.IamRole(this, "r", {
  assumeRolePolicy:
    '{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Action": "sts:AssumeRole",\n      "Principal": {\n        "Service": "config.amazonaws.com"\n      },\n      "Effect": "Allow",\n      "Sid": ""\n    }\n  ]\n}\n',
  name: "awsconfig-example",
});
const awsS3BucketB = new aws.s3Bucket.S3Bucket(this, "b", {
  bucket: "example-awsconfig",
  forceDestroy: true,
});
const awsConfigConfigurationRecorderFoo =
  new aws.configConfigurationRecorder.ConfigConfigurationRecorder(this, "foo", {
    name: "example",
    roleArn: awsIamRoleR.arn,
  });
const awsConfigDeliveryChannelFoo =
  new aws.configDeliveryChannel.ConfigDeliveryChannel(this, "foo_3", {
    depends_on: [`\${${awsConfigConfigurationRecorderFoo.fqn}}`],
    name: "example",
    s3BucketName: awsS3BucketB.bucket,
  });
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
awsConfigDeliveryChannelFoo.overrideLogicalId("foo");
new aws.iamRolePolicy.IamRolePolicy(this, "p", {
  name: "awsconfig-example",
  policy: `{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": [
        "s3:*"
      ],
      "Effect": "Allow",
      "Resource": [
        "\${${awsS3BucketB.arn}}",
        "\${${awsS3BucketB.arn}}/*"
      ]
    }
  ]
}
`,
  role: awsIamRoleR.id,
});

```

## Argument Reference

The following arguments are supported:

* `name` - (Optional) The name of the delivery channel. Defaults to `default`. Changing it recreates the resource.
* `s3BucketName` - (Required) The name of the S3 bucket used to store the configuration history.
* `s3KeyPrefix` - (Optional) The prefix for the specified S3 bucket.
* `s3KmsKeyArn` - (Optional) The ARN of the AWS KMS key used to encrypt objects delivered by AWS Config. Must belong to the same Region as the destination S3 bucket.
* `snsTopicArn` - (Optional) The ARN of the SNS topic that AWS Config delivers notifications to.
* `snapshotDeliveryProperties` - (Optional) Options for how AWS Config delivers configuration snapshots. See below

### `snapshotDeliveryProperties`

* `deliveryFrequency` - (Optional) - The frequency with which AWS Config recurringly delivers configuration snapshotsE.g., `oneHour` or `threeHours`. Valid values are listed [here](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html#API_ConfigSnapshotDeliveryProperties_Contents).

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The name of the delivery channel.

## Import

Delivery Channel can be imported using the name, e.g.,

```console
$ terraform import aws_config_delivery_channel.foo example
```
