---
subcategory: "Security Hub"
layout: "aws"
page_title: "AWS: aws_securityhub_organization_configuration"
description: |-
  Manages the Security Hub Organization Configuration
---

# Resource: aws\_securityhub\_organization\_configuration

Manages the Security Hub Organization Configuration.

\~> **NOTE:** This resource requires an [`awsSecurityhubOrganizationAdminAccount`](/docs/providers/aws/r/securityhub_organization_admin_account.html) to be configured (not necessarily with Terraform). More information about managing Security Hub in an organization can be found in the [Managing administrator and member accounts](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-accounts.html) documentation

\~> **NOTE:** This is an advanced Terraform resource. Terraform will automatically assume management of the Security Hub Organization Configuration without import and perform no actions on removal from the Terraform configuration.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
const awsOrganizationsOrganizationExample =
  new aws.organizationsOrganization.OrganizationsOrganization(this, "example", {
    awsServiceAccessPrincipals: ["securityhub.amazonaws.com"],
    featureSet: "ALL",
  });
const awsSecurityhubOrganizationAdminAccountExample =
  new aws.securityhubOrganizationAdminAccount.SecurityhubOrganizationAdminAccount(
    this,
    "example_1",
    {
      adminAccountId: "123456789012",
      depends_on: [`\${${awsOrganizationsOrganizationExample.fqn}}`],
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
awsSecurityhubOrganizationAdminAccountExample.overrideLogicalId("example");
const awsSecurityhubOrganizationConfigurationExample =
  new aws.securityhubOrganizationConfiguration.SecurityhubOrganizationConfiguration(
    this,
    "example_2",
    {
      autoEnable: true,
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
awsSecurityhubOrganizationConfigurationExample.overrideLogicalId("example");

```

## Argument Reference

The following arguments are supported:

* `autoEnable` - (Required) Whether to automatically enable Security Hub for new accounts in the organization.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - AWS Account ID.

## Import

An existing Security Hub enabled account can be imported using the AWS account ID, e.g.,

```console
$ terraform import aws_securityhub_organization_configuration.example 123456789012
```
