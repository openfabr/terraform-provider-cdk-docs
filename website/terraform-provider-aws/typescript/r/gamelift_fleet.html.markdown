---
subcategory: "GameLift"
layout: "aws"
page_title: "AWS: aws_gamelift_fleet"
description: |-
  Provides a GameLift Fleet resource.
---

# Resource: aws\_gamelift\_fleet

Provides a GameLift Fleet resource.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
new aws.gameliftFleet.GameliftFleet(this, "example", {
  buildId: "${aws_gamelift_build.example.id}",
  ec2InstanceType: "t2.micro",
  fleetType: "ON_DEMAND",
  name: "example-fleet-name",
  runtimeConfiguration: {
    serverProcess: [
      {
        concurrentExecutions: 1,
        launchPath: "C:\\game\\GomokuServer.exe",
      },
    ],
  },
});

```

## Argument Reference

The following arguments are supported:

* `buildId` - (Optional) ID of the GameLift Build to be deployed on the fleet.
* `certificateConfiguration` - (Optional) Prompts GameLift to generate a TLS/SSL certificate for the fleet. See [certificate\_configuration](#certificate_configuration).
* `description` - (Optional) Human-readable description of the fleet.
* `ec2InboundPermission` - (Optional) Range of IP addresses and port settings that permit inbound traffic to access server processes running on the fleet. See below.
* `ec2InstanceType` - (Required) Name of an EC2 instance typeE.g., `t2Micro`
* `fleetType` - (Optional) Type of fleet. This value must be `onDemand` or `spot`. Defaults to `onDemand`.
* `instanceRoleArn` - (Optional) ARN of an IAM role that instances in the fleet can assume.
* `metricGroups` - (Optional) List of names of metric groups to add this fleet to. A metric group tracks metrics across all fleets in the group. Defaults to `default`.
* `name` - (Required) The name of the fleet.
* `newGameSessionProtectionPolicy` - (Optional) Game session protection policy to apply to all instances in this fleetE.g., `fullProtection`. Defaults to `noProtection`.
* `resourceCreationLimitPolicy` - (Optional) Policy that limits the number of game sessions an individual player can create over a span of time for this fleet. See below.
* `runtimeConfiguration` - (Optional) Instructions for launching server processes on each instance in the fleet. See below.
* `scriptId` - (Optional) ID of the GameLift Script to be deployed on the fleet.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### Nested Fields

#### `certificateConfiguration`

* `certificateType` - (Optional) Indicates whether a TLS/SSL certificate is generated for a fleet. Valid values are `disabled` and `generated`. Default value is `disabled`.

#### `ec2InboundPermission`

* `fromPort` - (Required) Starting value for a range of allowed port numbers.
* `ipRange` - (Required) Range of allowed IP addresses expressed in CIDR notationE.g., `000000000000/[subnetMask]` or `0000/[subnetMask]`.
* `protocol` - (Required) Network communication protocol used by the fleetE.g., `tcp` or `udp`
* `toPort` - (Required) Ending value for a range of allowed port numbers. Port numbers are end-inclusive. This value must be higher than `fromPort`.

#### `resourceCreationLimitPolicy`

* `newGameSessionsPerCreator` - (Optional) Maximum number of game sessions that an individual can create during the policy period.
* `policyPeriodInMinutes` - (Optional) Time span used in evaluating the resource creation limit policy.

#### `runtimeConfiguration`

* `gameSessionActivationTimeoutSeconds` - (Optional) Maximum amount of time (in seconds) that a game session can remain in status `activating`.
* `maxConcurrentGameSessionActivations` - (Optional) Maximum number of game sessions with status `activating` to allow on an instance simultaneously.
* `serverProcess` - (Optional) Collection of server process configurations that describe which server processes to run on each instance in a fleet. See below.

#### `serverProcess`

* `concurrentExecutions` - (Required) Number of server processes using this configuration to run concurrently on an instance.
* `launchPath` - (Required) Location of the server executable in a game build. All game builds are installed on instances at the root : for Windows instances `c:\game`, and for Linux instances `/local/game`.
* `parameters` - (Optional) Optional list of parameters to pass to the server executable on launch.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - Fleet ID.
* `arn` - Fleet ARN.
* `buildArn` - Build ARN.
* `operatingSystem` - Operating system of the fleet's computing resources.
* `scriptArn` - Script ARN.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `70M`)
* `delete` - (Default `20M`)

## Import

GameLift Fleets can be imported using the ID, e.g.,

```console
$ terraform import aws_gamelift_fleet.example <fleet-id>
```
