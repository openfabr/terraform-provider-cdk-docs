---
subcategory: "VPC IPAM (IP Address Manager)"
layout: "aws"
page_title: "AWS: aws_vpc_ipam_scope"
description: |-
  Creates a scope for AWS IPAM.
---

# Resource: aws\_vpc\_ipam\_scope

Creates a scope for AWS IPAM.

## Example Usage

Basic usage:

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
const dataAwsRegionCurrent = new aws.dataAwsRegion.DataAwsRegion(
  this,
  "current",
  {}
);
const awsVpcIpamExample = new aws.vpcIpam.VpcIpam(this, "example", {
  operatingRegions: [
    {
      regionName: dataAwsRegionCurrent.name,
    },
  ],
});
const awsVpcIpamScopeExample = new aws.vpcIpamScope.VpcIpamScope(
  this,
  "example_2",
  {
    description: "Another Scope",
    ipamId: awsVpcIpamExample.id,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
awsVpcIpamScopeExample.overrideLogicalId("example");

```

## Argument Reference

The following arguments are supported:

* `ipamId` - The ID of the IPAM for which you're creating this scope.
* `description` - (Optional) A description for the scope you're creating.
* `tags` - (Optional) Key-value mapping of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The ID of the IPAM Scope.
* `ipamArn` - The ARN of the IPAM for which you're creating this scope.
* `isDefault` - Defines if the scope is the default scope or not.
* `poolCount` - Count of pools under this scope

## Import

IPAMs can be imported using the `scopeId`, e.g.

```console
$ terraform import aws_vpc_ipam_scope.example ipam-scope-0513c69f283d11dfb
```
