---
subcategory: "Cognito Identity"
layout: "aws"
page_title: "AWS: aws_cognito_identity_pool_roles_attachment"
description: |-
  Provides an AWS Cognito Identity Pool Roles Attachment.
---

# Resource: aws\_cognito\_identity\_pool\_roles\_attachment

Provides an AWS Cognito Identity Pool Roles Attachment.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
const awsCognitoIdentityPoolMain =
  new aws.cognitoIdentityPool.CognitoIdentityPool(this, "main", {
    allowUnauthenticatedIdentities: false,
    identityPoolName: "identity pool",
    supportedLoginProviders: {
      "graph.facebook.com": "7346241598935555",
    },
  });
const awsIamRoleAuthenticated = new aws.iamRole.IamRole(this, "authenticated", {
  assumeRolePolicy: `{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Federated": "cognito-identity.amazonaws.com"
      },
      "Action": "sts:AssumeRoleWithWebIdentity",
      "Condition": {
        "StringEquals": {
          "cognito-identity.amazonaws.com:aud": "\${${awsCognitoIdentityPoolMain.id}}"
        },
        "ForAnyValue:StringLike": {
          "cognito-identity.amazonaws.com:amr": "authenticated"
        }
      }
    }
  ]
}
`,
  name: "cognito_authenticated",
});
const awsIamRolePolicyAuthenticated = new aws.iamRolePolicy.IamRolePolicy(
  this,
  "authenticated_2",
  {
    name: "authenticated_policy",
    policy:
      '{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Effect": "Allow",\n      "Action": [\n        "mobileanalytics:PutEvents",\n        "cognito-sync:*",\n        "cognito-identity:*"\n      ],\n      "Resource": [\n        "*"\n      ]\n    }\n  ]\n}\n',
    role: awsIamRoleAuthenticated.id,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
awsIamRolePolicyAuthenticated.overrideLogicalId("authenticated");
const awsCognitoIdentityPoolRolesAttachmentMain =
  new aws.cognitoIdentityPoolRolesAttachment.CognitoIdentityPoolRolesAttachment(
    this,
    "main_3",
    {
      identityPoolId: awsCognitoIdentityPoolMain.id,
      roleMapping: [
        {
          ambiguousRoleResolution: "AuthenticatedRole",
          identityProvider: "graph.facebook.com",
          mappingRule: [
            {
              claim: "isAdmin",
              matchType: "Equals",
              roleArn: awsIamRoleAuthenticated.arn,
              value: "paid",
            },
          ],
          type: "Rules",
        },
      ],
      roles: {
        authenticated: awsIamRoleAuthenticated.arn,
      },
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
awsCognitoIdentityPoolRolesAttachmentMain.overrideLogicalId("main");

```

## Argument Reference

The Cognito Identity Pool Roles Attachment argument layout is a structure composed of several sub-resources - these resources are laid out below.

* `identityPoolId` (Required) - An identity pool ID in the format `regionGuid`.
* `roleMapping` (Optional) - A List of [Role Mapping](#role-mappings).
* `roles` (Required) - The map of roles associated with this pool. For a given role, the key will be either "authenticated" or "unauthenticated" and the value will be the Role ARN.

#### Role Mappings

* `identityProvider` (Required) - A string identifying the identity provider, for example, "graph.facebook.com" or "cognito-idp.us-east-1.amazonaws.com/us-east-1\_abcdefghi:app\_client\_id". Depends on `cognitoIdentityProviders` set on `awsCognitoIdentityPool` resource or a `awsCognitoIdentityProvider` resource.
* `ambiguousRoleResolution` (Optional) - Specifies the action to be taken if either no rules match the claim value for the Rules type, or there is no cognito:preferred\_role claim and there are multiple cognito:roles matches for the Token type. `required` if you specify Token or Rules as the Type.
* `mappingRule` (Optional) - The [Rules Configuration](#rules-configuration) to be used for mapping users to roles. You can specify up to 25 rules per identity provider. Rules are evaluated in order. The first one to match specifies the role.
* `type` (Required) - The role mapping type.

#### Rules Configuration

* `claim` (Required) - The claim name that must be present in the token, for example, "isAdmin" or "paid".
* `matchType` (Required) - The match condition that specifies how closely the claim value in the IdP token must match Value.
* `roleArn` (Required) - The role ARN.
* `value` (Required) - A brief string that the claim must match, for example, "paid" or "yes".

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The identity pool ID.

## Import

Cognito Identity Pool Roles Attachment can be imported using the Identity Pool ID, e.g.,

```console
$ terraform import aws_cognito_identity_pool_roles_attachment.example us-west-2:b64805ad-cb56-40ba-9ffc-f5d8207e6d42
```
