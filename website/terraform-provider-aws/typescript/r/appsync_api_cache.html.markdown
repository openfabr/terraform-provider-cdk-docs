---
subcategory: "AppSync"
layout: "aws"
page_title: "AWS: aws_appsync_api_cache"
description: |-
  Provides an AppSync API Cache.
---

# Resource: aws\_appsync\_api\_cache

Provides an AppSync API Cache.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
const awsAppsyncGraphqlApiExample = new aws.appsyncGraphqlApi.AppsyncGraphqlApi(
  this,
  "example",
  {
    authenticationType: "API_KEY",
    name: "example",
  }
);
const awsAppsyncApiCacheExample = new aws.appsyncApiCache.AppsyncApiCache(
  this,
  "example_1",
  {
    apiCachingBehavior: "FULL_REQUEST_CACHING",
    apiId: awsAppsyncGraphqlApiExample.id,
    ttl: 900,
    type: "LARGE",
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
awsAppsyncApiCacheExample.overrideLogicalId("example");

```

## Argument Reference

The following arguments are supported:

* `apiId` - (Required) GraphQL API ID.
* `apiCachingBehavior` - (Required) Caching behavior. Valid values are `fullRequestCaching` and `perResolverCaching`.
* `type` - (Required) Cache instance type. Valid values are `small`, `medium`, `large`, `xlarge`, `large2X`, `large4X`, `large8X`, `large12X`, `t2Small`, `t2Medium`, `r4Large`, `r4Xlarge`, `r42Xlarge`, `r44Xlarge`, `r48Xlarge`.
* `ttl` - (Required) TTL in seconds for cache entries.
* `atRestEncryptionEnabled` - (Optional) At-rest encryption flag for cache. You cannot update this setting after creation.
* `transitEncryptionEnabled` - (Optional) Transit encryption flag when connecting to cache. You cannot update this setting after creation.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - AppSync API ID.

## Import

`awsAppsyncApiCache` can be imported using the AppSync API ID, e.g.,

```console
$ terraform import aws_appsync_api_cache.example xxxxx
```
