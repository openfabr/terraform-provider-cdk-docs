---
subcategory: "EMR"
layout: "aws"
page_title: "AWS: aws_emr_security_configuration"
description: |-
  Provides a resource to manage AWS EMR Security Configurations
---

# Resource: aws\_emr\_security\_configuration

Provides a resource to manage AWS EMR Security Configurations

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
new aws.emrSecurityConfiguration.EmrSecurityConfiguration(this, "foo", {
  configuration:
    '{\n  "EncryptionConfiguration": {\n    "AtRestEncryptionConfiguration": {\n      "S3EncryptionConfiguration": {\n        "EncryptionMode": "SSE-S3"\n      },\n      "LocalDiskEncryptionConfiguration": {\n        "EncryptionKeyProviderType": "AwsKms",\n        "AwsKmsKey": "arn:aws:kms:us-west-2:187416307283:alias/tf_emr_test_key"\n      }\n    },\n    "EnableInTransitEncryption": false,\n    "EnableAtRestEncryption": true\n  }\n}\n',
  name: "emrsc_other",
});

```

## Argument Reference

The following arguments are supported:

* `name` - (Optional) The name of the EMR Security Configuration. By default generated by Terraform.
* `namePrefix` - (Optional) Creates a unique name beginning with the specified
  prefix. Conflicts with `name`.
* `configuration` - (Required) A JSON formatted Security Configuration

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The ID of the EMR Security Configuration (Same as the `name`)
* `name` - The Name of the EMR Security Configuration
* `configuration` - The JSON formatted Security Configuration
* `creationDate` - Date the Security Configuration was created

## Import

EMR Security Configurations can be imported using the `name`, e.g.,

```console
$ terraform import aws_emr_security_configuration.sc example-sc-name
```
