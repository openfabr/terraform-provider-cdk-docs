---
subcategory: "Cognito IDP (Identity Provider)"
layout: "aws"
page_title: "AWS: aws_cognito_user_group"
description: |-
  Provides a Cognito User Group resource.
---

# Resource: aws\_cognito\_user\_group

Provides a Cognito User Group resource.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
const awsCognitoUserPoolMain = new aws.cognitoUserPool.CognitoUserPool(
  this,
  "main",
  {
    name: "identity pool",
  }
);
const awsIamRoleGroupRole = new aws.iamRole.IamRole(this, "group_role", {
  assumeRolePolicy:
    '{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Sid": "",\n      "Effect": "Allow",\n      "Principal": {\n        "Federated": "cognito-identity.amazonaws.com"\n      },\n      "Action": "sts:AssumeRoleWithWebIdentity",\n      "Condition": {\n        "StringEquals": {\n          "cognito-identity.amazonaws.com:aud": "us-east-1:12345678-dead-beef-cafe-123456790ab"\n        },\n        "ForAnyValue:StringLike": {\n          "cognito-identity.amazonaws.com:amr": "authenticated"\n        }\n      }\n    }\n  ]\n}\n',
  name: "user-group-role",
});
const awsCognitoUserGroupMain = new aws.cognitoUserGroup.CognitoUserGroup(
  this,
  "main_2",
  {
    description: "Managed by Terraform",
    name: "user-group",
    precedence: 42,
    roleArn: awsIamRoleGroupRole.arn,
    userPoolId: awsCognitoUserPoolMain.id,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
awsCognitoUserGroupMain.overrideLogicalId("main");

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the user group.
* `userPoolId` - (Required) The user pool ID.
* `description` - (Optional) The description of the user group.
* `precedence` - (Optional) The precedence of the user group.
* `roleArn` - (Optional) The ARN of the IAM role to be associated with the user group.

## Attributes Reference

No additional attributes are exported.

## Import

Cognito User Groups can be imported using the `userPoolId`/`name` attributes concatenated, e.g.,

```console
$ terraform import aws_cognito_user_group.group us-east-1_vG78M4goG/user-group
```
