---
subcategory: "ECR Public"
layout: "aws"
page_title: "AWS: aws_ecrpublic_repository_policy"
description: |-
  Provides an Elastic Container Registry Public Repository Policy.
---

# Resource: aws\_ecrpublic\_repository\_policy

Provides an Elastic Container Registry Public Repository Policy.

Note that currently only one policy may be applied to a repository.

\~> **NOTE:** This resource can only be used with `usEast1` region.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
const awsEcrpublicRepositoryExample =
  new aws.ecrpublicRepository.EcrpublicRepository(this, "example", {
    repositoryName: "example",
  });
const awsEcrpublicRepositoryPolicyExample =
  new aws.ecrpublicRepositoryPolicy.EcrpublicRepositoryPolicy(
    this,
    "example_1",
    {
      policy:
        '{\n    "Version": "2008-10-17",\n    "Statement": [\n        {\n            "Sid": "new policy",\n            "Effect": "Allow",\n            "Principal": "*",\n            "Action": [\n                "ecr:GetDownloadUrlForLayer",\n                "ecr:BatchGetImage",\n                "ecr:BatchCheckLayerAvailability",\n                "ecr:PutImage",\n                "ecr:InitiateLayerUpload",\n                "ecr:UploadLayerPart",\n                "ecr:CompleteLayerUpload",\n                "ecr:DescribeRepositories",\n                "ecr:GetRepositoryPolicy",\n                "ecr:ListImages",\n                "ecr:DeleteRepository",\n                "ecr:BatchDeleteImage",\n                "ecr:SetRepositoryPolicy",\n                "ecr:DeleteRepositoryPolicy"\n            ]\n        }\n    ]\n}\n',
      repositoryName: awsEcrpublicRepositoryExample.repositoryName,
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
awsEcrpublicRepositoryPolicyExample.overrideLogicalId("example");

```

## Argument Reference

The following arguments are supported:

* `repositoryName` - (Required) Name of the repository to apply the policy.
* `policy` - (Required) The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `registryId` - The registry ID where the repository was created.

## Import

ECR Public Repository Policy can be imported using the repository name, e.g.

```console
$ terraform import aws_ecrpublic_repository_policy.example example
```
