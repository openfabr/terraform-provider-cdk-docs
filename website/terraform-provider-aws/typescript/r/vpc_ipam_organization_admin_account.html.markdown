---
subcategory: "VPC IPAM (IP Address Manager)"
layout: "aws"
page_title: "AWS: aws_vpc_ipam_organization_admin_account"
description: |-
  Enables the IPAM Service and promotes an account to delegated administrator for the service.
---

# Resource: aws\_vpc\_ipam\_organization\_admin\_account

Enables the IPAM Service and promotes a delegated administrator.

## Example Usage

Basic usage:

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
const awsIpamDelegateAccount = new aws.provider.AwsProvider(this, "aws", {
  alias: "ipam_delegate_account",
});
const dataAwsCallerIdentityDelegated =
  new aws.dataAwsCallerIdentity.DataAwsCallerIdentity(this, "delegated", {
    provider: `\${${awsIpamDelegateAccount.fqn}}`,
  });
new aws.vpcIpamOrganizationAdminAccount.VpcIpamOrganizationAdminAccount(
  this,
  "example",
  {
    delegatedAdminAccountId: dataAwsCallerIdentityDelegated.accountId,
  }
);

```

## Argument Reference

The following arguments are supported:

* `delegatedAdminAccountId` - (Required)

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - The Organizations ARN for the delegate account.
* `id` - The Organizations member account ID that you want to enable as the IPAM account.
* `email` - The Organizations email for the delegate account.
* `name` - The Organizations name for the delegate account.
* `servicePrincipal` - The AWS service principal.

## Import

IPAMs can be imported using the `delegateAccountId`, e.g.

```console
$ terraform import aws_vpc_ipam_organization_admin_account.example 12345678901
```
