---
subcategory: "Transfer Family"
layout: "aws"
page_title: "AWS: aws_transfer_ssh_key"
description: |-
  Provides a AWS Transfer SSH Public Key resource.
---

# Resource: aws\_transfer\_ssh\_key

Provides a AWS Transfer User SSH Key resource.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
const awsIamRoleExample = new aws.iamRole.IamRole(this, "example", {
  assumeRolePolicy:
    '{\n\t"Version": "2012-10-17",\n\t"Statement": [\n\t\t{\n\t\t"Effect": "Allow",\n\t\t"Principal": {\n\t\t\t"Service": "transfer.amazonaws.com"\n\t\t},\n\t\t"Action": "sts:AssumeRole"\n\t\t}\n\t]\n}\n',
  name: "tf-test-transfer-user-iam-role",
});
const awsIamRolePolicyExample = new aws.iamRolePolicy.IamRolePolicy(
  this,
  "example_1",
  {
    name: "tf-test-transfer-user-iam-policy",
    policy:
      '{\n\t"Version": "2012-10-17",\n\t"Statement": [\n\t\t{\n\t\t\t"Sid": "AllowFullAccesstoS3",\n\t\t\t"Effect": "Allow",\n\t\t\t"Action": [\n\t\t\t\t"s3:*"\n\t\t\t],\n\t\t\t"Resource": "*"\n\t\t}\n\t]\n}\n',
    role: awsIamRoleExample.id,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
awsIamRolePolicyExample.overrideLogicalId("example");
const awsTransferServerExample = new aws.transferServer.TransferServer(
  this,
  "example_2",
  {
    identityProviderType: "SERVICE_MANAGED",
    tags: {
      NAME: "tf-acc-test-transfer-server",
    },
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
awsTransferServerExample.overrideLogicalId("example");
const awsTransferUserExample = new aws.transferUser.TransferUser(
  this,
  "example_3",
  {
    role: awsIamRoleExample.arn,
    serverId: awsTransferServerExample.id,
    tags: {
      NAME: "tftestuser",
    },
    userName: "tftestuser",
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
awsTransferUserExample.overrideLogicalId("example");
const awsTransferSshKeyExample = new aws.transferSshKey.TransferSshKey(
  this,
  "example_4",
  {
    body: "... SSH key ...",
    serverId: awsTransferServerExample.id,
    userName: awsTransferUserExample.userName,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
awsTransferSshKeyExample.overrideLogicalId("example");

```

## Argument Reference

The following arguments are supported:

* `serverId` - (Requirement) The Server ID of the Transfer Server (e.g., `s12345678`)
* `userName` - (Requirement) The name of the user account that is assigned to one or more servers.
* `body` - (Requirement) The public key portion of an SSH key pair.

## Attributes Reference

No additional attributes are exported.

## Import

Transfer SSH Public Key can be imported using the `serverId` and `userName` and `sshPublicKeyId` separated by `/`.

```console
$ terraform import aws_transfer_ssh_key.bar s-12345678/test-username/key-12345
```
