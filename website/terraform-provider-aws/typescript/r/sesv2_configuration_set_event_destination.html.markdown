---
subcategory: "SESv2 (Simple Email V2)"
layout: "aws"
page_title: "AWS: aws_sesv2_configuration_set_event_destination"
description: |-
  Terraform resource for managing an AWS SESv2 (Simple Email V2) Configuration Set Event Destination.
---

# Resource: aws\_sesv2\_configuration\_set\_event\_destination

Terraform resource for managing an AWS SESv2 (Simple Email V2) Configuration Set Event Destination.

## Example Usage

### Cloud Watch Destination

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
const awsSesv2ConfigurationSetExample =
  new aws.sesv2ConfigurationSet.Sesv2ConfigurationSet(this, "example", {
    configurationSetName: "example",
  });
const awsSesv2ConfigurationSetEventDestinationExample =
  new aws.sesv2ConfigurationSetEventDestination.Sesv2ConfigurationSetEventDestination(
    this,
    "example_1",
    {
      configurationSetName:
        awsSesv2ConfigurationSetExample.configurationSetName,
      eventDestination: {
        cloudWatchDestination: {
          dimensionConfiguration: [
            {
              defaultDimensionValue: "example",
              dimensionName: "example",
              dimensionValueSource: "MESSAGE_TAG",
            },
          ],
        },
        enabled: true,
        matchingEventTypes: ["SEND"],
      },
      eventDestinationName: "example",
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
awsSesv2ConfigurationSetEventDestinationExample.overrideLogicalId("example");

```

### Kinesis Firehose Destination

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
const awsSesv2ConfigurationSetExample =
  new aws.sesv2ConfigurationSet.Sesv2ConfigurationSet(this, "example", {
    configurationSetName: "example",
  });
const awsSesv2ConfigurationSetEventDestinationExample =
  new aws.sesv2ConfigurationSetEventDestination.Sesv2ConfigurationSetEventDestination(
    this,
    "example_1",
    {
      configurationSetName:
        awsSesv2ConfigurationSetExample.configurationSetName,
      eventDestination: {
        enabled: true,
        kinesisFirehoseDestination: {
          deliveryStreamArn:
            "${aws_kinesis_firehose_delivery_stream.example.arn}",
          iamRoleArn: "${aws_iam_role.example.arn}",
        },
        matchingEventTypes: ["SEND"],
      },
      eventDestinationName: "example",
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
awsSesv2ConfigurationSetEventDestinationExample.overrideLogicalId("example");

```

### Pinpoint Destination

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
const awsSesv2ConfigurationSetExample =
  new aws.sesv2ConfigurationSet.Sesv2ConfigurationSet(this, "example", {
    configurationSetName: "example",
  });
const awsSesv2ConfigurationSetEventDestinationExample =
  new aws.sesv2ConfigurationSetEventDestination.Sesv2ConfigurationSetEventDestination(
    this,
    "example_1",
    {
      configurationSetName:
        awsSesv2ConfigurationSetExample.configurationSetName,
      eventDestination: {
        enabled: true,
        matchingEventTypes: ["SEND"],
        pinpointDestination: {
          applicationArn: "${aws_pinpoint_app.example.arn}",
        },
      },
      eventDestinationName: "example",
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
awsSesv2ConfigurationSetEventDestinationExample.overrideLogicalId("example");

```

### SNS Destination

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
const awsSesv2ConfigurationSetExample =
  new aws.sesv2ConfigurationSet.Sesv2ConfigurationSet(this, "example", {
    configurationSetName: "example",
  });
const awsSesv2ConfigurationSetEventDestinationExample =
  new aws.sesv2ConfigurationSetEventDestination.Sesv2ConfigurationSetEventDestination(
    this,
    "example_1",
    {
      configurationSetName:
        awsSesv2ConfigurationSetExample.configurationSetName,
      eventDestination: {
        enabled: true,
        matchingEventTypes: ["SEND"],
        snsDestination: {
          topicArn: "${aws_sns_topic.example.arn}",
        },
      },
      eventDestinationName: "example",
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
awsSesv2ConfigurationSetEventDestinationExample.overrideLogicalId("example");

```

## Argument Reference

The following arguments are required:

* `configurationSetName` - (Required) The name of the configuration set.
* `eventDestination` - (Required) A name that identifies the event destination within the configuration set.
* `eventDestinationName` - (Required) An object that defines the event destination. See [event\_destination](#event_destination) below.

### event\_destination

The following arguments are required:

* `matchingEventTypes` - (Required) - An array that specifies which events the Amazon SES API v2 should send to the destinations. Valid values: `send`, `reject`, `bounce`, `complaint`, `delivery`, `open`, `click`, `renderingFailure`, `deliveryDelay`, `subscription`.

The following arguments are optional:

* `cloudWatchDestination` - (Optional) An object that defines an Amazon CloudWatch destination for email events. See [cloud\_watch\_destination](#cloud_watch_destination) below
* `enabled` - (Optional) When the event destination is enabled, the specified event types are sent to the destinations. Default: `false`.
* `kinesisFirehoseDestination` - (Optional) An object that defines an Amazon Kinesis Data Firehose destination for email events. See [kinesis\_firehose\_destination](#kinesis_firehose_destination) below.
* `pinpointDestination` - (Optional) An object that defines an Amazon Pinpoint project destination for email events. See [pinpoint\_destination](#pinpoint_destination) below.
* `snsDestination` - (Optional) An object that defines an Amazon SNS destination for email events. See [sns\_destination](#sns_destination) below.

### cloud\_watch\_destination

The following arguments are required:

* `dimensionConfiguration` - (Required) An array of objects that define the dimensions to use when you send email events to Amazon CloudWatch. See [dimension\_configuration](#dimension_configuration) below.

### dimension\_configuration

The following arguments are required:

* `defaultDimensionValue` - (Required) The default value of the dimension that is published to Amazon CloudWatch if you don't provide the value of the dimension when you send an email.
  ( `dimensionName` - (Required) The name of an Amazon CloudWatch dimension associated with an email sending metric.
* `dimensionValueSource` - (Required) The location where the Amazon SES API v2 finds the value of a dimension to publish to Amazon CloudWatch. Valid values: `messageTag`, `emailHeader`, `linkTag`.

### kinesis\_firehose\_destination

The following arguments are required:

* `deliveryStreamArn` - (Required) The Amazon Resource Name (ARN) of the Amazon Kinesis Data Firehose stream that the Amazon SES API v2 sends email events to.
* `iamRoleArn` - (Required) The Amazon Resource Name (ARN) of the IAM role that the Amazon SES API v2 uses to send email events to the Amazon Kinesis Data Firehose stream.

### pinpoint\_destination

The following arguments are required:

* `pinpointApplicationArn` - (Required) The Amazon Resource Name (ARN) of the Amazon Pinpoint project to send email events to.

### sns\_destination

The following arguments are required:

* `topicArn` - (Required) The Amazon Resource Name (ARN) of the Amazon SNS topic to publish email events to.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - A pipe-delimited string combining `configurationSetName` and `eventDestinationName`.

## Import

SESv2 (Simple Email V2) Configuration Set Event Destination can be imported using the `id` (`configurationSetName|eventDestinationName`), e.g.,

```console
$ terraform import aws_sesv2_configuration_set_event_destination.example example_configuration_set|example_event_destination
```
