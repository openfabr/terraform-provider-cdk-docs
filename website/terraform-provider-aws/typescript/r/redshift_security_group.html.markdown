---
subcategory: "Redshift"
layout: "aws"
page_title: "AWS: aws_redshift_security_group"
description: |-
  Provides a Redshift security group resource.
---

# Resource: aws\_redshift\_security\_group

Creates a new Amazon Redshift security group. You use security groups to control access to non-VPC clusters.

!> **WARNING:** With the retirement of EC2-Classic the `awsRedshiftSecurityGroup` resource has been deprecated and will be removed in a future version. Any existing resources can be removed from [Terraform state](https://www.terraform.io/language/state) using the [`terraformStateRm`](https://www.terraform.io/cli/commands/state/rm#command-state-rm) command.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
new aws.redshiftSecurityGroup.RedshiftSecurityGroup(this, "default", {
  ingress: [
    {
      cidr: "10.0.0.0/24",
    },
  ],
  name: "redshift-sg",
});

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Redshift security group.
* `description` - (Optional) The description of the Redshift security group. Defaults to "Managed by Terraform".
* `ingress` - (Optional) A list of ingress rules.

Ingress blocks support the following:

* `cidr` - The CIDR block to accept
* `securityGroupName` - The name of the security group to authorize
* `securityGroupOwnerId` - The owner Id of the security group provided
  by `securityGroupName`.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The Redshift security group ID.

## Import

Redshift security groups can be imported using the `name`, e.g.,

```console
$ terraform import aws_redshift_security_group.testgroup1 redshift_test_group
```
