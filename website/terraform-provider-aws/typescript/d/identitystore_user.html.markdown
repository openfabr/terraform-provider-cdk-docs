---
subcategory: "SSO Identity Store"
layout: "aws"
page_title: "AWS: aws_identitystore_user"
description: |-
  Get information on an Identity Store User
---

# Data Source: aws\_identitystore\_user

Use this data source to get an Identity Store User.

## Example Usage

```typescript
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
const dataAwsSsoadminInstancesExample =
  new aws.dataAwsSsoadminInstances.DataAwsSsoadminInstances(
    this,
    "example",
    {}
  );
const dataAwsIdentitystoreUserExample =
  new aws.dataAwsIdentitystoreUser.DataAwsIdentitystoreUser(this, "example_1", {
    alternateIdentifier: {
      uniqueAttribute: {
        attributePath: "UserName",
        attributeValue: "ExampleUser",
      },
    },
    identityStoreId: `\${tolist(${dataAwsSsoadminInstancesExample.identityStoreIds})[0]}`,
  });
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
dataAwsIdentitystoreUserExample.overrideLogicalId("example");
new cdktf.TerraformOutput(this, "user_id", {
  value: dataAwsIdentitystoreUserExample.userId,
});

```

## Argument Reference

The following arguments are required:

* `identityStoreId` - (Required) Identity Store ID associated with the Single Sign-On Instance.

The following arguments are optional:

* `alternateIdentifier` (Optional) A unique identifier for a user or group that is not the primary identifier. Conflicts with `userId` and `filter`. Detailed below.
* `filter` - (Optional, **Deprecated** use the `alternateIdentifier` attribute instead) Configuration block for filtering by a unique attribute of the user. Detailed below.
* `userId` - (Optional) The identifier for a user in the Identity Store.

\-> Exactly one of the above arguments must be provided. Passing both `filter` and `userId` is allowed for backwards compatibility.

### `alternateIdentifier` Configuration Block

The following arguments are supported by the `alternateIdentifier` configuration block:

* `externalId` - (Optional) Configuration block for filtering by the identifier issued by an external identity provider. Detailed below.
* `uniqueAttribute` - (Optional) An entity attribute that's unique to a specific entity. Detailed below.

\-> Exactly one of the above arguments must be provided.

### `externalId` Configuration Block

The following arguments are supported by the `externalId` configuration block:

* `id` - (Required) The identifier issued to this resource by an external identity provider.
* `issuer` - (Required) The issuer for an external identifier.

### `filter` Configuration Block

\~> The `filter` configuration block has been deprecated. Use `alternateIdentifier` instead.

The following arguments are supported by the `filter` configuration block:

* `attributePath` - (Required) Attribute path that is used to specify which attribute name to search. Currently, `userName` is the only valid attribute path.
* `attributeValue` - (Required) Value for an attribute.

### `uniqueAttribute` Configuration Block

The following arguments are supported by the `uniqueAttribute` configuration block:

* `attributePath` - (Required) Attribute path that is used to specify which attribute name to search. For example: `userName`. Refer to the [User data type](https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_User.html).
* `attributeValue` - (Required) Value for an attribute.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - Identifier of the user in the Identity Store.
* `addresses` - List of details about the user's address.
  * `country` - The country that this address is in.
  * `formatted` - The name that is typically displayed when the address is shown for display.
  * `locality` - The address locality.
  * `postalCode` - The postal code of the address.
  * `primary` - When `true`, this is the primary address associated with the user.
  * `region` - The region of the address.
  * `streetAddress` - The street of the address.
  * `type` - The type of address.
* `displayName` - The name that is typically displayed when the user is referenced.
* `emails` - List of details about the user's email.
  * `primary` - When `true`, this is the primary email associated with the user.
  * `type` - The type of email.
  * `value` - The email address. This value must be unique across the identity store.
* `externalIds` - List of identifiers issued to this resource by an external identity provider.
  * `id` - The identifier issued to this resource by an external identity provider.
  * `issuer` - The issuer for an external identifier.
* `locale` - The user's geographical region or location.
* `name` - Details about the user's full name.
  * `familyName` - The family name of the user.
  * `formatted` - The name that is typically displayed when the name is shown for display.
  * `givenName` - The given name of the user.
  * `honorificPrefix` - The honorific prefix of the user.
  * `honorificSuffix` - The honorific suffix of the user.
  * `middleName` - The middle name of the user.
* `nickname` - An alternate name for the user.
* `phoneNumbers` - List of details about the user's phone number.
  * `primary` - When `true`, this is the primary phone number associated with the user.
  * `type` - The type of phone number.
  * `value` - The user's phone number.
* `preferredLanguage` - The preferred language of the user.
* `profileUrl` - An URL that may be associated with the user.
* `timezone` - The user's time zone.
* `title` - The user's title.
* `userName` - User's user name value.
* `userType` - The user type.
