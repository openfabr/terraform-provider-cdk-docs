---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_network_interfaces"
description: |-
    Provides a list of network interface ids
---

# Data Source: aws\_network\_interfaces

## Example Usage

The following shows outputing all network interface ids in a region.

```typescript
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
const dataAwsNetworkInterfacesExample =
  new aws.dataAwsNetworkInterfaces.DataAwsNetworkInterfaces(
    this,
    "example",
    {}
  );
const cdktfTerraformOutputExample = new cdktf.TerraformOutput(
  this,
  "example_1",
  {
    value: dataAwsNetworkInterfacesExample.ids,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
cdktfTerraformOutputExample.overrideLogicalId("example");

```

The following example retrieves a list of all network interface ids with a custom tag of `name` set to a value of `test`.

```typescript
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
const dataAwsNetworkInterfacesExample =
  new aws.dataAwsNetworkInterfaces.DataAwsNetworkInterfaces(this, "example", {
    tags: {
      Name: "test",
    },
  });
new cdktf.TerraformOutput(this, "example1", {
  value: dataAwsNetworkInterfacesExample.ids,
});

```

The following example retrieves a network interface ids which associated
with specific subnet.

```typescript
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
const dataAwsNetworkInterfacesExample =
  new aws.dataAwsNetworkInterfaces.DataAwsNetworkInterfaces(this, "example", {
    filter: [
      {
        name: "subnet-id",
        values: ["${aws_subnet.test.id}"],
      },
    ],
  });
const cdktfTerraformOutputExample = new cdktf.TerraformOutput(
  this,
  "example_1",
  {
    value: dataAwsNetworkInterfacesExample.ids,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
cdktfTerraformOutputExample.overrideLogicalId("example");

```

## Argument Reference

*   `tags` - (Optional) Map of tags, each pair of which must exactly match
    a pair on the desired network interfaces.

*   `filter` - (Optional) Custom filter block as described below.

More complex filters can be expressed using one or more `filter` sub-blocks,
which take the following arguments:

*   `name` - (Required) Name of the field to filter by, as defined by
    [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html).

*   `values` - (Required) Set of values that are accepted for the given field.

## Attributes Reference

* `id` - AWS Region.
* `ids` - List of all the network interface ids found.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `read` - (Default `20M`)
