---
subcategory: "MQ"
layout: "aws"
page_title: "AWS: aws_mq_broker_instance_type_offerings"
description: |-
  Provides a MQ Broker Instance Offerings data source.
---

# Data Source: aws\_mq\_broker\_instance\_type\_offerings

Provides information about a MQ Broker Instance Offerings.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
new aws.dataAwsMqBrokerInstanceTypeOfferings.DataAwsMqBrokerInstanceTypeOfferings(
  this,
  "all",
  {
    engineType: "ACTIVEMQ",
    hostInstanceType: "mq.m5.large",
    storageType: "EBS",
  }
);
new aws.dataAwsMqBrokerInstanceTypeOfferings.DataAwsMqBrokerInstanceTypeOfferings(
  this,
  "empty",
  {}
);
new aws.dataAwsMqBrokerInstanceTypeOfferings.DataAwsMqBrokerInstanceTypeOfferings(
  this,
  "engine",
  {
    engineType: "ACTIVEMQ",
  }
);
new aws.dataAwsMqBrokerInstanceTypeOfferings.DataAwsMqBrokerInstanceTypeOfferings(
  this,
  "instance",
  {
    hostInstanceType: "mq.m5.large",
  }
);
new aws.dataAwsMqBrokerInstanceTypeOfferings.DataAwsMqBrokerInstanceTypeOfferings(
  this,
  "storage",
  {
    storageType: "EBS",
  }
);

```

## Argument Reference

The following arguments are supported:

* `engineType` - (Optional) Filter response by engine type.
* `hostInstanceType` - (Optional) Filter response by host instance type.
* `storageType` - (Optional) Filter response by storage type.

## Attributes Reference

* `brokerInstanceOptions` -  Option for host instance type. See Broker Instance Options below.

### Broker Instance Options

* `availabilityZones` - List of available AZs. See Availability Zones. below
* `engineType` - Broker's engine type.
* `hostInstanceType` - Broker's instance type.
* `storageType` - Broker's storage type.
* `supportedDeploymentModes` - The list of supported deployment modes.
* `supportedEngineVersions` - The list of supported engine versions.

### Availability Zones

* `name` - Name of the Availability Zone.
