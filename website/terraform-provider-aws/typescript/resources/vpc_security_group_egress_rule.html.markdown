---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_vpc_security_group_egress_rule"
description: |-
  Provides a VPC security group egress rule resource.
---

# Resource: awsVpcSecurityGroupEgressRule

Manages an outbound (egress) rule for a security group.

When specifying an outbound rule for your security group in a VPC, the configuration must include a destination for the traffic.

\~> **NOTE on Security Groups and Security Group Rules:** Terraform currently provides a [Security Group resource](security_group.html) with `ingress` and `egress` rules defined in-line and a [Security Group Rule resource](security_group_rule.html) which manages one or more `ingress` or
`egress` rules. Both of these resource were added before AWS assigned a [security group rule unique ID](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules.html), and they do not work well in all scenarios using the`description` and `tags` attributes, which rely on the unique ID.
The `awsVpcSecurityGroupEgressRule` resource has been added to address these limitations and should be used for all new security group rules.
You should not use the `awsVpcSecurityGroupEgressRule` resource in conjunction with an `awsSecurityGroup` resource with in-line rules or with `awsSecurityGroupRule` resources defined for the same Security Group, as rule conflicts may occur and rules will be overwritten.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
new aws.vpcSecurityGroupEgressRule.VpcSecurityGroupEgressRule(this, "example", {
  cidrIpv4: "10.0.0.0/8",
  fromPort: 80,
  ipProtocol: "tcp",
  securityGroupId: "${aws_security_group.example.id}",
  toPort: 8080,
});

```

## Argument Reference

The following arguments are supported:

* `cidrIpv4` - (Optional) The destination IPv4 CIDR range.
* `cidrIpv6` - (Optional) The destination IPv6 CIDR range.
* `description` - (Optional) The security group rule description.
* `fromPort` - (Optional) The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type.
* `ipProtocol` - (Optional) The IP protocol name or number. Use `1` to specify all protocols.
* `prefixListId` - (Optional) The ID of the destination prefix list.
* `referencedSecurityGroupId` - (Optional) The destination security group that is referenced in the rule.
* `securityGroupId` - (Required) The ID of the security group.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `toPort` - (Optional) The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - The Amazon Resource Name (ARN) of the security group rule.
* `securityGroupRuleId` - The ID of the security group rule.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

Security group egress rules can be imported using the `securityGroupRuleId`, e.g.,

```console
$ terraform import aws_vpc_security_group_egress_rule.example sgr-02108b27edd666983
```
