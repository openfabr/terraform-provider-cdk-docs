---
subcategory: "CodePipeline"
layout: "aws"
page_title: "AWS: aws_codepipeline_custom_action_type"
description: |-
  Provides a CodePipeline CustomActionType.
---

# Resource: awsCodepipelineCustomActionType

Provides a CodeDeploy CustomActionType

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
new aws.codepipelineCustomActionType.CodepipelineCustomActionType(
  this,
  "example",
  {
    category: "Build",
    inputArtifactDetails: {
      maximumCount: 1,
      minimumCount: 0,
    },
    outputArtifactDetails: {
      maximumCount: 1,
      minimumCount: 0,
    },
    providerName: "example",
    version: "1",
  }
);

```

## Argument Reference

The following arguments are supported:

* `category` - (Required) The category of the custom action. Valid values: `source`, `build`, `deploy`, `test`, `invoke`, `approval`
* `configurationProperty` - (Optional) The configuration properties for the custom action. Max 10 items.

The `configurationProperty` object supports the following:

*   `description` - (Optional) The description of the action configuration property.

*   `key` - (Required) Whether the configuration property is a key.

*   `name` - (Required) The name of the action configuration property.

*   `queryable` - (Optional) Indicates that the property will be used in conjunction with PollForJobs.

*   `required` - (Required) Whether the configuration property is a required value.

*   `secret`- (Required) Whether the configuration property is secret.

*   `type`- (Optional) The type of the configuration property. Valid values: `string`, `number`, `boolean`

*   `inputArtifactDetails` - (Required) The details of the input artifact for the action.

The `inputArtifactDetails` object supports the following:

*   `maximumCount` - (Required) The maximum number of artifacts allowed for the action type. Min: 0, Max: 5

*   `minimumCount` - (Required) The minimum number of artifacts allowed for the action type. Min: 0, Max: 5

*   `outputArtifactDetails` - (Required) The details of the output artifact of the action.

The `outputArtifactDetails` object supports the following:

*   `maximumCount` - (Required) The maximum number of artifacts allowed for the action type. Min: 0, Max: 5

*   `minimumCount` - (Required) The minimum number of artifacts allowed for the action type. Min: 0, Max: 5

*   `providerName` - (Required) The provider of the service used in the custom action

*   `settings` - (Optional) The settings for an action type.

The `settings` object supports the following:

*   `entityUrlTemplate` - (Optional) The URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system.

*   `executionUrlTemplate` - (Optional) The URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system.

*   `revisionUrlTemplate` - (Optional) The URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.

*   `thirdPartyConfigurationUrl` - (Optional) The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.

*   `tags` - (Optional) Map of tags to assign to this resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

*   `version` - (Required) The version identifier of the custom action.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - Composed of category, provider and version. For example, `build:terraform:1`
* `arn` - The action ARN.
* `owner` - The creator of the action being called.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

CodeDeploy CustomActionType can be imported using the `id`, e.g.

```console
$ terraform import aws_codepipeline_custom_action_type.example Build:terraform:1
```
