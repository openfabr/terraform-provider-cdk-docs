---
subcategory: "CloudWatch Application Insights"
layout: "aws"
page_title: "AWS: aws_applicationinsights_application"
description: |-
  Provides a CloudWatch Application Insights Application resource
---

# Resource: awsApplicationinsightsApplication

Provides a ApplicationInsights Application resource.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
const awsResourcegroupsGroupExample =
  new aws.resourcegroupsGroup.ResourcegroupsGroup(this, "example", {
    name: "example",
    resourceQuery: {
      query:
        '${jsonencode({\n      ResourceTypeFilters = [\n        "AWS::EC2::Instance"\n      ]\n\n      TagFilters = [\n        {\n          Key = "Stage"\n          Values = [\n            "Test"\n          ]\n        }\n      ]\n    })}',
    },
  });
const awsApplicationinsightsApplicationExample =
  new aws.applicationinsightsApplication.ApplicationinsightsApplication(
    this,
    "example_1",
    {
      resourceGroupName: awsResourcegroupsGroupExample.name,
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
awsApplicationinsightsApplicationExample.overrideLogicalId("example");

```

## Argument Reference

The following arguments are required:

* `resourceGroupName` - (Required) Name of the resource group.

The following arguments are optional:

* `autoConfigEnabled` - (Optional)  Indicates whether Application Insights automatically configures unmonitored resources in the resource group.
* `autoCreate` - (Optional) Configures all of the resources in the resource group by applying the recommended configurations.
* `cweMonitorEnabled` - (Optional)  Indicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated, failed deployment, and others.
* `groupingType` - (Optional) Application Insights can create applications based on a resource group or on an account. To create an account-based application using all of the resources in the account, set this parameter to `ACCOUNT_BASED`.
* `opsCenterEnabled` - (Optional) When set to `true`, creates opsItems for any problems detected on an application.
* `opsItemSnsTopicArn` - (Optional) SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem.
* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - ARN of the Application.
* `id` - Name of the resource group.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

ApplicationInsights Applications can be imported using the `resourceGroupName`, e.g.,

```console
$ terraform import aws_applicationinsights_application.some some-application
```
