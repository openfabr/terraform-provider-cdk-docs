---
subcategory: "Transcribe"
layout: "aws"
page_title: "AWS: aws_transcribe_vocabulary_filter"
description: |-
  Terraform resource for managing an AWS Transcribe VocabularyFilter.
---

# Resource: awsTranscribeVocabularyFilter

Terraform resource for managing an AWS Transcribe VocabularyFilter.

## Example Usage

### Basic Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
new aws.transcribeVocabularyFilter.TranscribeVocabularyFilter(this, "example", {
  languageCode: "en-US",
  tags: {
    tag1: "value1",
    tag2: "value3",
  },
  vocabularyFilterName: "example",
  words: ["cars", "bucket"],
});

```

## Argument Reference

The following arguments are required:

* `languageCode` - (Required) The language code you selected for your vocabulary filter. Refer to the [supported languages](https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html) page for accepted codes.
* `vocabularyFilterName` - (Required) The name of the VocabularyFilter.
* `words` - (Required) - A list of terms to include in the vocabulary. Conflicts with `vocabularyFileUri`

The following arguments are optional:

* `vocabularyFilterFileUri` - (Required) The Amazon S3 location (URI) of the text file that contains your custom VocabularyFilter. Conflicts with `words`.
* `tags` - (Optional) A map of tags to assign to the VocabularyFilter. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - VocabularyFilter name.
* `arn` - ARN of the VocabularyFilter.
* `downloadUri` - Generated download URI.

## Import

Transcribe VocabularyFilter can be imported using the `vocabularyFilterName`, e.g.,

```console
$ terraform import aws_transcribe_vocabulary_filter.example example-name
```
