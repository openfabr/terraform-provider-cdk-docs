---
subcategory: "API Gateway"
layout: "aws"
page_title: "AWS: aws_api_gateway_api_key"
description: |-
  Provides an API Gateway API Key.
---

# Resource: awsApiGatewayApiKey

Provides an API Gateway API Key.

\~> **NOTE:** Since the API Gateway usage plans feature was launched on August 11, 2016, usage plans are now **required** to associate an API key with an API stage.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
new aws.apiGatewayApiKey.ApiGatewayApiKey(this, "MyDemoApiKey", {
  name: "demo",
});

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Name of the API key
* `description` - (Optional) API key description. Defaults to "Managed by Terraform".
* `enabled` - (Optional) Whether the API key can be used by callers. Defaults to `true`.
* `value` - (Optional) Value of the API key. If not specified, it will be automatically generated by AWS on creation.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - ID of the API key
* `createdDate` - Creation date of the API key
* `lastUpdatedDate` - Last update date of the API key
* `value` - Value of the API key
* `arn` - ARN
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

API Gateway Keys can be imported using the `id`, e.g.,

```console
$ terraform import aws_api_gateway_api_key.my_demo_key 8bklk8bl1k3sB38D9B3l0enyWT8c09B30lkq0blk
```
