---
subcategory: "App Runner"
layout: "aws"
page_title: "AWS: aws_apprunner_connection"
description: |-
  Manages an App Runner Connection.
---

# Resource: awsApprunnerConnection

Manages an App Runner Connection.

\~> **NOTE:** After creation, you must complete the authentication handshake using the App Runner console.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
new aws.apprunnerConnection.ApprunnerConnection(this, "example", {
  connectionName: "example",
  providerType: "GITHUB",
  tags: {
    Name: "example-apprunner-connection",
  },
});

```

## Argument Reference

The following arguments supported:

* `connectionName` - (Required) Name of the connection.
* `providerType` - (Required) Source repository provider. Valid values: `github`.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - ARN of the connection.
* `status` - Current state of the App Runner connection. When the state is `available`, you can use the connection to create an [`awsApprunnerService` resource](apprunner_service.html).
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

App Runner Connections can be imported by using the `connectionName`, e.g.,

```console
$ terraform import aws_apprunner_connection.example example
```
