---
subcategory: "Lightsail"
layout: "aws"
page_title: "AWS: aws_lightsail_certificate"
description: |-
  Provides a lightsail certificate
---

# Resource: awsLightsailCertificate

Provides a lightsail certificate.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
new aws.lightsailCertificate.LightsailCertificate(this, "test", {
  domainName: "testdomain.com",
  name: "test",
  subjectAlternativeNames: ["www.testdomain.com"],
});

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Lightsail load balancer.
* `domainName` - (Required) A domain name for which the certificate should be issued.
* `subjectAlternativeNames` - (Optional) Set of domains that should be SANs in the issued certificate. `domainName` attribute is automatically added as a Subject Alternative Name.
* `tags` - (Optional) A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The name of the lightsail certificate (matches `name`).
* `arn` - The ARN of the lightsail certificate.
* `createdAt` - The timestamp when the instance was created.
* `domainValidationOptions` - Set of domain validation objects which can be used to complete certificate validation. Can have more than one element, e.g., if SANs are defined.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.

## Import

`awsLightsailCertificate` can be imported using the certificate name, e.g.

```console
$ terraform import aws_lightsail_certificate.test CertificateName
```
