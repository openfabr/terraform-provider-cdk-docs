---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Dataform"
description: |-
  A resource represents a Dataform Git repository
---

# google\_dataform\_repository

A resource represents a Dataform Git repository

\~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/guides/provider_versions.html) for more details on beta resources.

To get more information about Repository, see:

* [API documentation](https://cloud.google.com/dataform/reference/rest/v1beta1/projects.locations.repositories)
* How-to Guides
  * [Official Documentation](https://cloud.google.com/dataform/docs/)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=dataform_repository&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Dataform Repository

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: google.
For a more precise conversion please use the --provider flag in convert.*/
const googleSecretManagerSecretSecret =
  new google.secretManagerSecret.SecretManagerSecret(this, "secret", {
    provider: "${google-beta}",
    replication: [
      {
        automatic: true,
      },
    ],
    secret_id: "secret",
  });
const googleSecretManagerSecretVersionSecretVersion =
  new google.secretManagerSecretVersion.SecretManagerSecretVersion(
    this,
    "secret_version",
    {
      provider: "${google-beta}",
      secret: googleSecretManagerSecretSecret.id,
      secret_data: "secret-data",
    }
  );
const googleSourcerepoRepositoryGitRepository =
  new google.sourcerepoRepository.SourcerepoRepository(this, "git_repository", {
    name: "my/repository",
    provider: "${google-beta}",
  });
new google.dataformRepository.DataformRepository(this, "dataform_respository", {
  git_remote_settings: [
    {
      authentication_token_secret_version:
        googleSecretManagerSecretVersionSecretVersion.id,
      default_branch: "main",
      url: googleSourcerepoRepositoryGitRepository.url,
    },
  ],
  name: "dataform_repository",
  provider: "${google-beta}",
});

```

## Argument Reference

The following arguments are supported:

* `name` -
  (Required)
  The repository's name.

***

*   `gitRemoteSettings` -
    (Optional)
    Optional. If set, configures this repository to be linked to a Git remote.
    Structure is [documented below](#nested_git_remote_settings).

*   `region` -
    (Optional)
    A reference to the region

*   `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.

<a name="nested_git_remote_settings"></a>The `gitRemoteSettings` block supports:

*   `url` -
    (Required)
    The Git remote's URL.

*   `defaultBranch` -
    (Required)
    The Git remote's default branch name.

*   `authenticationTokenSecretVersion` -
    (Required)
    The name of the Secret Manager secret version to use as an authentication token for Git operations. Must be in the format projects/*/secrets/*/versions/\*.

*   `tokenStatus` -
    (Output)
    Indicates the status of the Git access token. https://cloud.google.com/dataform/reference/rest/v1beta1/projects.locations.repositories#TokenStatus

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{region}}/repositories/{{name}}`

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

* `create` - Default is 20 minutes.
* `update` - Default is 20 minutes.
* `delete` - Default is 20 minutes.

## Import

Repository can be imported using any of these accepted formats:

```console
$ terraform import google_dataform_repository.default projects/{{project}}/locations/{{region}}/repositories/{{name}}
$ terraform import google_dataform_repository.default {{project}}/{{region}}/{{name}}
$ terraform import google_dataform_repository.default {{region}}/{{name}}
$ terraform import google_dataform_repository.default {{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
