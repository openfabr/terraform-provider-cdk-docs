---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: DCL     ***
#
# ----------------------------------------------------------------------------
#
#     This file is managed by Magic Modules (https:#github.com/GoogleCloudPlatform/magic-modules)
#     and is based on the DCL (https:#github.com/GoogleCloudPlatform/declarative-resource-client-library).
#     Changes will need to be made to the DCL or Magic Modules instead of here.
#
#     We are not currently able to accept contributions to this file. If changes
#     are required, please file an issue at https:#github.com/hashicorp/terraform-provider-google/issues/new/choose
#
# ----------------------------------------------------------------------------
subcategory: "Dataplex"
description: |-
  The Dataplex Lake resource
---

# google\_dataplex\_lake

The Dataplex Lake resource

## Example Usage - basic\_lake

A basic example of a dataplex lake

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: google.
For a more precise conversion please use the --provider flag in convert.*/
new google.dataplexLake.DataplexLake(this, "primary", {
  description: "Lake for DCL",
  display_name: "Lake for DCL",
  labels: [
    {
      "my-lake": "exists",
    },
  ],
  location: "us-west1",
  name: "lake",
  project: "my-project-name",
});

```

## Argument Reference

The following arguments are supported:

*   `location` -
    (Required)
    The location for the resource

*   `name` -
    (Required)
    The name of the lake.

***

*   `description` -
    (Optional)
    Optional. Description of the lake.

*   `displayName` -
    (Optional)
    Optional. User friendly display name.

*   `labels` -
    (Optional)
    Optional. User-defined labels for the lake.

*   `metastore` -
    (Optional)
    Optional. Settings to manage lake and Dataproc Metastore service instance association.

*   `project` -
    (Optional)
    The project for the resource

The `metastore` block supports:

* `service` -
  (Optional)
  Optional. A relative reference to the Dataproc Metastore (https://cloud.google.com/dataproc-metastore/docs) service associated with the lake: `projects/{projectId}/locations/{locationId}/services/{serviceId}`

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

*   `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/lakes/{{name}}`

*   `assetStatus` -
    Output only. Aggregated status of the underlying assets of the lake.

*   `createTime` -
    Output only. The time when the lake was created.

*   `metastoreStatus` -
    Output only. Metastore status of the lake.

*   `serviceAccount` -
    Output only. Service account associated with this lake. This service account must be authorized to access or operate on resources managed by the lake.

*   `state` -
    Output only. Current state of the lake. Possible values: STATE\_UNSPECIFIED, ACTIVE, CREATING, DELETING, ACTION\_REQUIRED

*   `uid` -
    Output only. System generated globally unique ID for the lake. This ID will be different if the lake is deleted and re-created with the same name.

*   `updateTime` -
    Output only. The time when the lake was last updated.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

* `create` - Default is 20 minutes.
* `update` - Default is 20 minutes.
* `delete` - Default is 20 minutes.

## Import

Lake can be imported using any of these accepted formats:

```console
$ terraform import google_dataplex_lake.default projects/{{project}}/locations/{{location}}/lakes/{{name}}
$ terraform import google_dataplex_lake.default {{project}}/{{location}}/{{name}}
$ terraform import google_dataplex_lake.default {{location}}/{{name}}
```
