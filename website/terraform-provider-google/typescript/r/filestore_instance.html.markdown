---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Filestore"
description: |-
  A Google Cloud Filestore instance.
---

# google\_filestore\_instance

A Google Cloud Filestore instance.

To get more information about Instance, see:

* [API documentation](https://cloud.google.com/filestore/docs/reference/rest/v1beta1/projects.locations.instances/create)
* How-to Guides
  * [Official Documentation](https://cloud.google.com/filestore/docs/creating-instances)
  * [Use with Kubernetes](https://cloud.google.com/filestore/docs/accessing-fileshares)
  * [Copying Data In/Out](https://cloud.google.com/filestore/docs/copying-data)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=filestore_instance_basic&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Filestore Instance Basic

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: google.
For a more precise conversion please use the --provider flag in convert.*/
new google.filestoreInstance.FilestoreInstance(this, "instance", {
  file_shares: [
    {
      capacity_gb: 2660,
      name: "share1",
    },
  ],
  location: "us-central1-b",
  name: "test-instance",
  networks: [
    {
      modes: ["MODE_IPV4"],
      network: "default",
    },
  ],
  tier: "PREMIUM",
});

```

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=filestore_instance_full&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Filestore Instance Full

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: google.
For a more precise conversion please use the --provider flag in convert.*/
new google.filestoreInstance.FilestoreInstance(this, "instance", {
  file_shares: [
    {
      capacity_gb: 2660,
      name: "share1",
      nfs_export_options: [
        {
          access_mode: "READ_WRITE",
          ip_ranges: ["10.0.0.0/24"],
          squash_mode: "NO_ROOT_SQUASH",
        },
        {
          access_mode: "READ_ONLY",
          anon_gid: 456,
          anon_uid: 123,
          ip_ranges: ["10.10.0.0/24"],
          squash_mode: "ROOT_SQUASH",
        },
      ],
    },
  ],
  location: "us-central1-b",
  name: "test-instance",
  networks: [
    {
      connect_mode: "DIRECT_PEERING",
      modes: ["MODE_IPV4"],
      network: "default",
    },
  ],
  tier: "BASIC_SSD",
});

```

## Example Usage - Filestore Instance Enterprise

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: google.
For a more precise conversion please use the --provider flag in convert.*/
const googleKmsKeyRingFilestoreKeyring = new google.kmsKeyRing.KmsKeyRing(
  this,
  "filestore_keyring",
  {
    location: "us-central1",
    name: "filestore-keyring",
  }
);
const googleKmsCryptoKeyFilestoreKey = new google.kmsCryptoKey.KmsCryptoKey(
  this,
  "filestore_key",
  {
    key_ring: googleKmsKeyRingFilestoreKeyring.id,
    name: "filestore-key",
  }
);
new google.filestoreInstance.FilestoreInstance(this, "instance", {
  file_shares: [
    {
      capacity_gb: 2560,
      name: "share1",
    },
  ],
  kms_key_name: googleKmsCryptoKeyFilestoreKey.id,
  location: "us-central1",
  name: "test-instance",
  networks: [
    {
      modes: ["MODE_IPV4"],
      network: "default",
    },
  ],
  tier: "ENTERPRISE",
});

```

## Argument Reference

The following arguments are supported:

*   `name` -
    (Required)
    The resource name of the instance.

*   `tier` -
    (Required)
    The service tier of the instance.
    Possible values include: STANDARD, PREMIUM, BASIC\_HDD, BASIC\_SSD, HIGH\_SCALE\_SSD and ENTERPRISE

*   `fileShares` -
    (Required)
    File system shares on the instance. For this version, only a
    single file share is supported.
    Structure is [documented below](#nested_file_shares).

*   `networks` -
    (Required)
    VPC networks to which the instance is connected. For this version,
    only a single network is supported.
    Structure is [documented below](#nested_networks).

<a name="nested_file_shares"></a>The `fileShares` block supports:

*   `name` -
    (Required)
    The name of the fileshare (16 characters or less)

*   `capacityGb` -
    (Required)
    File share capacity in GiB. This must be at least 1024 GiB
    for the standard tier, or 2560 GiB for the premium tier.

*   `sourceBackup` -
    (Output)
    The resource name of the backup, in the format
    projects/{projectId}/locations/{locationId}/backups/{backupId},
    that this file share has been restored from.

*   `nfsExportOptions` -
    (Optional)
    Nfs Export Options. There is a limit of 10 export options per file share.
    Structure is [documented below](#nested_nfs_export_options).

<a name="nested_nfs_export_options"></a>The `nfsExportOptions` block supports:

*   `ipRanges` -
    (Optional)
    List of either IPv4 addresses, or ranges in CIDR notation which may mount the file share.
    Overlapping IP ranges are not allowed, both within and across NfsExportOptions. An error will be returned.
    The limit is 64 IP ranges/addresses for each FileShareConfig among all NfsExportOptions.

*   `accessMode` -
    (Optional)
    Either READ\_ONLY, for allowing only read requests on the exported directory,
    or READ\_WRITE, for allowing both read and write requests. The default is READ\_WRITE.
    Default value is `readWrite`.
    Possible values are `readOnly` and `readWrite`.

*   `squashMode` -
    (Optional)
    Either NO\_ROOT\_SQUASH, for allowing root access on the exported directory, or ROOT\_SQUASH,
    for not allowing root access. The default is NO\_ROOT\_SQUASH.
    Default value is `noRootSquash`.
    Possible values are `noRootSquash` and `rootSquash`.

*   `anonUid` -
    (Optional)
    An integer representing the anonymous user id with a default value of 65534.
    Anon\_uid may only be set with squashMode of ROOT\_SQUASH. An error will be returned
    if this field is specified for other squashMode settings.

*   `anonGid` -
    (Optional)
    An integer representing the anonymous group id with a default value of 65534.
    Anon\_gid may only be set with squashMode of ROOT\_SQUASH. An error will be returned
    if this field is specified for other squashMode settings.

<a name="nested_networks"></a>The `networks` block supports:

*   `network` -
    (Required)
    The name of the GCE VPC network to which the
    instance is connected.

*   `modes` -
    (Required)
    IP versions for which the instance has
    IP addresses assigned.
    Each value may be one of `addressModeUnspecified`, `modeIpv4`, and `modeIpv6`.

*   `reservedIpRange` -
    (Optional)
    A /29 CIDR block that identifies the range of IP
    addresses reserved for this instance.

*   `ipAddresses` -
    (Output)
    A list of IPv4 or IPv6 addresses.

*   `connectMode` -
    (Optional)
    The network connect mode of the Filestore instance.
    If not provided, the connect mode defaults to
    DIRECT\_PEERING.
    Default value is `directPeering`.
    Possible values are `directPeering` and `privateServiceAccess`.

***

*   `description` -
    (Optional)
    A description of the instance.

*   `labels` -
    (Optional)
    Resource labels to represent user-provided metadata.

*   `kmsKeyName` -
    (Optional)
    KMS key name used for data encryption.

*   `zone` -
    (Optional, Deprecated)
    The name of the Filestore zone of the instance.

*   `location` -
    (Optional)
    The name of the location of the instance. This can be a region for ENTERPRISE tier instances.

*   `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

*   `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/instances/{{name}}`

*   `createTime` -
    Creation timestamp in RFC3339 text format.

*   `etag` -
    Server-specified ETag for the instance resource to prevent
    simultaneous updates from overwriting each other.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

* `create` - Default is 20 minutes.
* `update` - Default is 20 minutes.
* `delete` - Default is 20 minutes.

## Import

Instance can be imported using any of these accepted formats:

```console
$ terraform import google_filestore_instance.default projects/{{project}}/locations/{{location}}/instances/{{name}}
$ terraform import google_filestore_instance.default {{project}}/{{location}}/{{name}}
$ terraform import google_filestore_instance.default {{location}}/{{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
