---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Vertex AI"
description: |-
  Instance of a metadata store.
---

# google\_vertex\_ai\_metadata\_store

Instance of a metadata store. Contains a set of metadata that can be queried.

\~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/guides/provider_versions.html) for more details on beta resources.

To get more information about MetadataStore, see:

* [API documentation](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.metadataStores)
* How-to Guides
  * [Official Documentation](https://cloud.google.com/vertex-ai/docs)

## Example Usage - Vertex Ai Metadata Store

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: google.
For a more precise conversion please use the --provider flag in convert.*/
new google.vertexAiMetadataStore.VertexAiMetadataStore(this, "store", {
  description: "Store to test the terraform module",
  name: "test-store",
  region: "us-central1",
});

```

## Argument Reference

The following arguments are supported:

***

*   `name` -
    (Optional)
    The name of the MetadataStore. This value may be up to 60 characters, and valid characters are \[a-z0-9\_]. The first character cannot be a number.

*   `description` -
    (Optional)
    Description of the MetadataStore.

*   `encryptionSpec` -
    (Optional)
    Customer-managed encryption key spec for a MetadataStore. If set, this MetadataStore and all sub-resources of this MetadataStore will be secured by this key.
    Structure is [documented below](#nested_encryption_spec).

*   `region` -
    (Optional)
    The region of the Metadata Store. eg us-central1

*   `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.

<a name="nested_encryption_spec"></a>The `encryptionSpec` block supports:

* `kmsKeyName` -
  (Optional)
  Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource.
  Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the resource is created.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

*   `id` - an identifier for the resource with format `{{name}}`

*   `createTime` -
    The timestamp of when the MetadataStore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.

*   `updateTime` -
    The timestamp of when the MetadataStore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.

*   `state` -
    State information of the MetadataStore.
    Structure is [documented below](#nested_state).

<a name="nested_state"></a>The `state` block contains:

* `diskUtilizationBytes` -
  (Output)
  The disk utilization of the MetadataStore in bytes.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

* `create` - Default is 20 minutes.
* `delete` - Default is 20 minutes.

## Import

MetadataStore can be imported using any of these accepted formats:

```console
$ terraform import google_vertex_ai_metadata_store.default projects/{{project}}/locations/{{region}}/metadataStores/{{name}}
$ terraform import google_vertex_ai_metadata_store.default {{project}}/{{region}}/{{name}}
$ terraform import google_vertex_ai_metadata_store.default {{region}}/{{name}}
$ terraform import google_vertex_ai_metadata_store.default {{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
