---
subcategory: "Cloud Platform"
description: |-
  Use this data source to get the IP addresses from different special IP ranges on Google Cloud Platform.
---

# google\_netblock\_ip\_ranges

Use this data source to get the IP addresses from different special IP ranges on Google Cloud Platform.

## Example Usage - Cloud Ranges

```typescript
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: google.
For a more precise conversion please use the --provider flag in convert.*/
const dataGoogleNetblockIpRangesNetblock =
  new google.dataGoogleNetblockIpRanges.DataGoogleNetblockIpRanges(
    this,
    "netblock",
    {}
  );
new cdktf.TerraformOutput(this, "cidr_blocks", {
  value: dataGoogleNetblockIpRangesNetblock.cidrBlocks,
});
new cdktf.TerraformOutput(this, "cidr_blocks_ipv4", {
  value: dataGoogleNetblockIpRangesNetblock.cidrBlocksIpv4,
});
new cdktf.TerraformOutput(this, "cidr_blocks_ipv6", {
  value: dataGoogleNetblockIpRangesNetblock.cidrBlocksIpv6,
});

```

## Example Usage - Allow Health Checks

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: google.
For a more precise conversion please use the --provider flag in convert.*/
const googleComputeNetworkDefault = new google.computeNetwork.ComputeNetwork(
  this,
  "default",
  {
    name: "test-network",
  }
);
const dataGoogleNetblockIpRangesLegacyHcs =
  new google.dataGoogleNetblockIpRanges.DataGoogleNetblockIpRanges(
    this,
    "legacy-hcs",
    {
      range_type: "legacy-health-checkers",
    }
  );
new google.computeFirewall.ComputeFirewall(this, "allow-hcs", {
  allow: [
    {
      ports: ["80"],
      protocol: "tcp",
    },
  ],
  name: "allow-hcs",
  network: googleComputeNetworkDefault.name,
  source_ranges: dataGoogleNetblockIpRangesLegacyHcs.cidrBlocksIpv4,
});

```

## Argument Reference

The following arguments are supported:

*   `rangeType` (Optional) - The type of range for which to provide results.

    Defaults to `cloudNetblocks`. The following `rangeType`s are supported:

    *   `cloudNetblocks` - Corresponds to the IP addresses used for resources on Google Cloud Platform. [More details.](https://cloud.google.com/compute/docs/faq#where_can_i_find_product_name_short_ip_ranges)

    *   `googleNetblocks` - Corresponds to IP addresses used for Google services. [More details.](https://cloud.google.com/compute/docs/faq#where_can_i_find_product_name_short_ip_ranges)

    *   `restrictedGoogleapis` - Corresponds to the IP addresses used for Private Google Access only for services that support VPC Service Controls API access. [More details.](https://cloud.google.com/vpc/docs/private-access-options#domain-vips)

    *   `privateGoogleapis` - Corresponds to the IP addresses used for Private Google Access for services that do not support VPC Service Controls. [More details.](https://cloud.google.com/vpc/docs/private-access-options#domain-vips)

    *   `dnsForwarders` - Corresponds to the IP addresses used to originate Cloud DNS outbound forwarding. [More details.](https://cloud.google.com/dns/zones/#creating-forwarding-zones)

    *   `iapForwarders` - Corresponds to the IP addresses used for Cloud IAP for TCP forwarding. [More details.](https://cloud.google.com/iap/docs/using-tcp-forwarding)

    *   `healthCheckers` - Corresponds to the IP addresses used for health checking in Cloud Load Balancing. [More details.](https://cloud.google.com/load-balancing/docs/health-checks)

    *   `legacyHealthCheckers` - Corresponds to the IP addresses used for legacy style health checkers (used by Network Load Balancing). [ More details.](https://cloud.google.com/load-balancing/docs/health-checks)

## Attributes Reference

*   `cidrBlocks` - Retrieve list of all CIDR blocks.

*   `cidrBlocksIpv4` - Retrieve list of the IPv4 CIDR blocks

*   `cidrBlocksIpv6` - Retrieve list of the IPv6 CIDR blocks, if available.
