---
subcategory: "Cloud (Stackdriver) Monitoring"
description: |-
  An Monitoring Service resource created automatically by GCP to monitor an
  App Engine service.
---

# googleMonitoringAppEngineService

A Monitoring Service is the root resource under which operational aspects of a
generic service are accessible. A service is some discrete, autonomous, and
network-accessible unit, designed to solve an individual concern

An App Engine monitoring service is automatically created by GCP to monitor
App Engine services.

To get more information about Service, see:

* [API documentation](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services)
* How-to Guides
  * [Service Monitoring](https://cloud.google.com/monitoring/service-monitoring)
  * [Monitoring API Documentation](https://cloud.google.com/monitoring/api/v3/)

## Example Usage - Monitoring App Engine Service

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: google.
For a more precise conversion please use the --provider flag in convert.*/
const googleStorageBucketBucket = new google.storageBucket.StorageBucket(
  this,
  "bucket",
  {
    location: "US",
    name: "appengine-static-content",
  }
);
const googleStorageBucketObjectObject =
  new google.storageBucketObject.StorageBucketObject(this, "object", {
    bucket: googleStorageBucketBucket.name,
    name: "hello-world.zip",
    source: "./test-fixtures/appengine/hello-world.zip",
  });
const googleAppEngineStandardAppVersionMyapp =
  new google.appEngineStandardAppVersion.AppEngineStandardAppVersion(
    this,
    "myapp",
    {
      delete_service_on_destroy: false,
      deployment: [
        {
          zip: [
            {
              source_url: `https://storage.googleapis.com/\${${googleStorageBucketBucket.name}}/\${${googleStorageBucketObjectObject.name}}`,
            },
          ],
        },
      ],
      entrypoint: [
        {
          shell: "node ./app.js",
        },
      ],
      env_variables: [
        {
          port: "8080",
        },
      ],
      runtime: "nodejs10",
      service: "myapp",
      version_id: "v1",
    }
  );
new google.dataGoogleMonitoringAppEngineService.DataGoogleMonitoringAppEngineService(
  this,
  "srv",
  {
    module_id: googleAppEngineStandardAppVersionMyapp.service,
  }
);

```

## Argument Reference

The arguments of this data source act as filters for identifying a given App Engine-created service.

The given filters must match exactly one service whose data will be exported as attributes. The following arguments are supported:

One of the following fields must be specified:

* `moduleId` - (Required) The ID of the App Engine module underlying this
  service. Corresponds to the moduleId resource label in the [gae\_app](https://cloud.google.com/monitoring/api/resources#tag_gae_app) monitored resource, or the service/module name.

***

Other optional fields include:

* `project` - (Optional) The ID of the project in which the resource belongs.
  If it is not provided, the provider project is used.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

*   `name` -
    The full REST resource name for this channel. The syntax is:
    `projects/[projectId]/services/[serviceId]`.

*   `displayName` -
    Name used for UI elements listing this (Monitoring) Service.

*   `telemetry` -
    Configuration for how to query telemetry on the Service. Structure is documented below.

The `telemetry` block includes:

* `resourceName` -
  (Optional)
  The full name of the resource that defines this service.
  Formatted as described in
  https://cloud.google.com/apis/design/resource\_names.
