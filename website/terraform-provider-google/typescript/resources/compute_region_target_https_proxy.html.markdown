---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Compute Engine"
description: |-
  Represents a RegionTargetHttpsProxy resource, which is used by one or more
  forwarding rules to route incoming HTTPS requests to a URL map.
---

# googleComputeRegionTargetHttpsProxy

Represents a RegionTargetHttpsProxy resource, which is used by one or more
forwarding rules to route incoming HTTPS requests to a URL map.

To get more information about RegionTargetHttpsProxy, see:

* [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/regionTargetHttpsProxies)
* How-to Guides
  * [Official Documentation](https://cloud.google.com/compute/docs/load-balancing/http/target-proxies)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=region_target_https_proxy_basic&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Region Target Https Proxy Basic

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: google.
For a more precise conversion please use the --provider flag in convert.*/
const googleComputeRegionHealthCheckDefault =
  new google.computeRegionHealthCheck.ComputeRegionHealthCheck(
    this,
    "default",
    {
      http_health_check: [
        {
          port: 80,
        },
      ],
      name: "http-health-check",
      region: "us-central1",
    }
  );
const googleComputeRegionSslCertificateDefault =
  new google.computeRegionSslCertificate.ComputeRegionSslCertificate(
    this,
    "default_1",
    {
      certificate: '${file("path/to/certificate.crt")}',
      name: "my-certificate",
      private_key: '${file("path/to/private.key")}',
      region: "us-central1",
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
googleComputeRegionSslCertificateDefault.overrideLogicalId("default");
const googleComputeRegionBackendServiceDefault =
  new google.computeRegionBackendService.ComputeRegionBackendService(
    this,
    "default_2",
    {
      health_checks: [googleComputeRegionHealthCheckDefault.id],
      load_balancing_scheme: "INTERNAL_MANAGED",
      name: "backend-service",
      protocol: "HTTP",
      region: "us-central1",
      timeout_sec: 10,
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
googleComputeRegionBackendServiceDefault.overrideLogicalId("default");
const googleComputeRegionUrlMapDefault =
  new google.computeRegionUrlMap.ComputeRegionUrlMap(this, "default_3", {
    default_service: googleComputeRegionBackendServiceDefault.id,
    description: "a description",
    host_rule: [
      {
        hosts: ["mysite.com"],
        path_matcher: "allpaths",
      },
    ],
    name: "url-map",
    path_matcher: [
      {
        default_service: googleComputeRegionBackendServiceDefault.id,
        name: "allpaths",
        path_rule: [
          {
            paths: ["/*"],
            service: googleComputeRegionBackendServiceDefault.id,
          },
        ],
      },
    ],
    region: "us-central1",
  });
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
googleComputeRegionUrlMapDefault.overrideLogicalId("default");
const googleComputeRegionTargetHttpsProxyDefault =
  new google.computeRegionTargetHttpsProxy.ComputeRegionTargetHttpsProxy(
    this,
    "default_4",
    {
      name: "test-proxy",
      region: "us-central1",
      ssl_certificates: [googleComputeRegionSslCertificateDefault.id],
      url_map: googleComputeRegionUrlMapDefault.id,
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
googleComputeRegionTargetHttpsProxyDefault.overrideLogicalId("default");

```

## Argument Reference

The following arguments are supported:

*   `name` -
    (Required)
    Name of the resource. Provided by the client when the resource is
    created. The name must be 1-63 characters long, and comply with
    RFC1035. Specifically, the name must be 1-63 characters long and match
    the regular expression `[aZ]([AZ09]*[aZ09])?` which means the
    first character must be a lowercase letter, and all following
    characters must be a dash, lowercase letter, or digit, except the last
    character, which cannot be a dash.

*   `sslCertificates` -
    (Required)
    A list of RegionSslCertificate resources that are used to authenticate
    connections between users and the load balancer. Currently, exactly
    one SSL certificate must be specified.

*   `urlMap` -
    (Required)
    A reference to the RegionUrlMap resource that defines the mapping from URL
    to the RegionBackendService.

***

*   `description` -
    (Optional)
    An optional description of this resource.

*   `sslPolicy` -
    (Optional, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
    A reference to the Region SslPolicy resource that will be associated with
    the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
    resource will not have any SSL policy configured.

*   `region` -
    (Optional)
    The Region in which the created target https proxy should reside.
    If it is not provided, the provider region is used.

*   `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

*   `id` - an identifier for the resource with format `projects/{{project}}/regions/{{region}}/targetHttpsProxies/{{name}}`

*   `creationTimestamp` -
    Creation timestamp in RFC3339 text format.

*   `proxyId` -
    The unique identifier for the resource.

*   `selfLink` - The URI of the created resource.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

* `create` - Default is 20 minutes.
* `update` - Default is 20 minutes.
* `delete` - Default is 20 minutes.

## Import

RegionTargetHttpsProxy can be imported using any of these accepted formats:

```console
$ terraform import google_compute_region_target_https_proxy.default projects/{{project}}/regions/{{region}}/targetHttpsProxies/{{name}}
$ terraform import google_compute_region_target_https_proxy.default {{project}}/{{region}}/{{name}}
$ terraform import google_compute_region_target_https_proxy.default {{region}}/{{name}}
$ terraform import google_compute_region_target_https_proxy.default {{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
