---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Dialogflow CX"
description: |-
  An intent represents a user's intent to interact with a conversational agent.
---

# googleDialogflowCxIntent

An intent represents a user's intent to interact with a conversational agent.

To get more information about Intent, see:

* [API documentation](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.intents)
* How-to Guides
  * [Official Documentation](https://cloud.google.com/dialogflow/cx/docs)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=dialogflowcx_intent_full&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Dialogflowcx Intent Full

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: google.
For a more precise conversion please use the --provider flag in convert.*/
const googleDialogflowCxAgentAgent =
  new google.dialogflowCxAgent.DialogflowCxAgent(this, "agent", {
    avatar_uri:
      "https://cloud.google.com/_static/images/cloud/icons/favicons/onecloud/super_cloud.png",
    default_language_code: "en",
    description: "Example description.",
    display_name: "dialogflowcx-agent",
    enable_spell_correction: true,
    enable_stackdriver_logging: true,
    location: "global",
    speech_to_text_settings: [
      {
        enable_speech_adaptation: true,
      },
    ],
    supported_language_codes: ["fr", "de", "es"],
    time_zone: "America/New_York",
  });
new google.dialogflowCxIntent.DialogflowCxIntent(this, "basic_intent", {
  description: "Intent example",
  display_name: "Example",
  labels: [
    {
      label1: "value1",
      label2: "value2",
    },
  ],
  parameters: [
    {
      entity_type: "projects/-/locations/-/agents/-/entityTypes/sys.date",
      id: "param1",
    },
  ],
  parent: googleDialogflowCxAgentAgent.id,
  priority: 1,
  training_phrases: [
    {
      parts: [
        {
          text: "training",
        },
        {
          text: "phrase",
        },
        {
          text: "example",
        },
      ],
      repeat_count: 1,
    },
  ],
});

```

## Argument Reference

The following arguments are supported:

* `displayName` -
  (Required)
  The human-readable name of the intent, unique within the agent.

***

*   `trainingPhrases` -
    (Optional)
    The collection of training phrases the agent is trained on to identify the intent.
    Structure is [documented below](#nested_training_phrases).

*   `parameters` -
    (Optional)
    The collection of parameters associated with the intent.
    Structure is [documented below](#nested_parameters).

*   `priority` -
    (Optional)
    The priority of this intent. Higher numbers represent higher priorities.
    If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the Normal priority in the console.
    If the supplied value is negative, the intent is ignored in runtime detect intent requests.

*   `isFallback` -
    (Optional)
    Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation.
    Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.

*   `labels` -
    (Optional)
    The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '\_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes.
    Prefix "sys-" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: \* sys-head \* sys-contextual The above labels do not require value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent.
    An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.

*   `description` -
    (Optional)
    Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.

*   `parent` -
    (Optional)
    The agent to create an intent for.
    Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.

*   `languageCode` -
    (Optional)
    The language of the following fields in intent:
    Intent.training\_phrases.parts.text
    If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.

<a name="nested_training_phrases"></a>The `trainingPhrases` block supports:

*   `id` -
    (Output)
    The unique identifier of the training phrase.

*   `parts` -
    (Required)
    The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase.
    Note: The API does not automatically annotate training phrases like the Dialogflow Console does.
    Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated.
    If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set.
    If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways:
    Part.text is set to a part of the phrase that has no parameters.
    Part.text is set to a part of the phrase that you want to annotate, and the parameterId field is set.
    Structure is [documented below](#nested_parts).

*   `repeatCount` -
    (Optional)
    Indicates how many times this example was added to the intent.

<a name="nested_parts"></a>The `parts` block supports:

*   `text` -
    (Required)
    The text for this part.

*   `parameterId` -
    (Optional)
    The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.

<a name="nested_parameters"></a>The `parameters` block supports:

*   `id` -
    (Required)
    The unique identifier of the parameter. This field is used by training phrases to annotate their parts.

*   `entityType` -
    (Required)
    The entity type of the parameter.
    Format: projects/-/locations/-/agents/-/entityTypes/<System Entity Type ID> for system entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date), or projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/entityTypes/<Entity Type ID> for developer entity types.

*   `isList` -
    (Optional)
    Indicates whether the parameter represents a list of values.

*   `redact` -
    (Optional)
    Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging.
    Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

*   `id` - an identifier for the resource with format `{{parent}}/intents/{{name}}`

*   `name` -
    The unique identifier of the intent.
    Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/intents/<Intent ID>.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

* `create` - Default is 40 minutes.
* `update` - Default is 40 minutes.
* `delete` - Default is 20 minutes.

## Import

Intent can be imported using any of these accepted formats:

```console
$ terraform import google_dialogflow_cx_intent.default {{parent}}/intents/{{name}}
$ terraform import google_dialogflow_cx_intent.default {{parent}}/{{name}}
```
