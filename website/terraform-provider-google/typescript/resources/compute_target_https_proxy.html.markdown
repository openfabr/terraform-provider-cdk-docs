---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Compute Engine"
description: |-
  Represents a TargetHttpsProxy resource, which is used by one or more
  global forwarding rule to route incoming HTTPS requests to a URL map.
---

# googleComputeTargetHttpsProxy

Represents a TargetHttpsProxy resource, which is used by one or more
global forwarding rule to route incoming HTTPS requests to a URL map.

To get more information about TargetHttpsProxy, see:

* [API documentation](https://cloud.google.com/compute/docs/reference/v1/targetHttpsProxies)
* How-to Guides
  * [Official Documentation](https://cloud.google.com/compute/docs/load-balancing/http/target-proxies)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=target_https_proxy_basic&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Target Https Proxy Basic

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: google.
For a more precise conversion please use the --provider flag in convert.*/
const googleComputeHttpHealthCheckDefault =
  new google.computeHttpHealthCheck.ComputeHttpHealthCheck(this, "default", {
    check_interval_sec: 1,
    name: "http-health-check",
    request_path: "/",
    timeout_sec: 1,
  });
const googleComputeSslCertificateDefault =
  new google.computeSslCertificate.ComputeSslCertificate(this, "default_1", {
    certificate: '${file("path/to/certificate.crt")}',
    name: "my-certificate",
    private_key: '${file("path/to/private.key")}',
  });
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
googleComputeSslCertificateDefault.overrideLogicalId("default");
const googleComputeBackendServiceDefault =
  new google.computeBackendService.ComputeBackendService(this, "default_2", {
    health_checks: [googleComputeHttpHealthCheckDefault.id],
    name: "backend-service",
    port_name: "http",
    protocol: "HTTP",
    timeout_sec: 10,
  });
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
googleComputeBackendServiceDefault.overrideLogicalId("default");
const googleComputeUrlMapDefault = new google.computeUrlMap.ComputeUrlMap(
  this,
  "default_3",
  {
    default_service: googleComputeBackendServiceDefault.id,
    description: "a description",
    host_rule: [
      {
        hosts: ["mysite.com"],
        path_matcher: "allpaths",
      },
    ],
    name: "url-map",
    path_matcher: [
      {
        default_service: googleComputeBackendServiceDefault.id,
        name: "allpaths",
        path_rule: [
          {
            paths: ["/*"],
            service: googleComputeBackendServiceDefault.id,
          },
        ],
      },
    ],
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
googleComputeUrlMapDefault.overrideLogicalId("default");
const googleComputeTargetHttpsProxyDefault =
  new google.computeTargetHttpsProxy.ComputeTargetHttpsProxy(
    this,
    "default_4",
    {
      name: "test-proxy",
      ssl_certificates: [googleComputeSslCertificateDefault.id],
      url_map: googleComputeUrlMapDefault.id,
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
googleComputeTargetHttpsProxyDefault.overrideLogicalId("default");

```

## Argument Reference

The following arguments are supported:

*   `name` -
    (Required)
    Name of the resource. Provided by the client when the resource is
    created. The name must be 1-63 characters long, and comply with
    RFC1035. Specifically, the name must be 1-63 characters long and match
    the regular expression `[aZ]([AZ09]*[aZ09])?` which means the
    first character must be a lowercase letter, and all following
    characters must be a dash, lowercase letter, or digit, except the last
    character, which cannot be a dash.

*   `urlMap` -
    (Required)
    A reference to the UrlMap resource that defines the mapping from URL
    to the BackendService.

***

*   `description` -
    (Optional)
    An optional description of this resource.

*   `quicOverride` -
    (Optional)
    Specifies the QUIC override policy for this resource. This determines
    whether the load balancer will attempt to negotiate QUIC with clients
    or not. Can specify one of NONE, ENABLE, or DISABLE. If NONE is
    specified, uses the QUIC policy with no user overrides, which is
    equivalent to DISABLE.
    Default value is `none`.
    Possible values are `none`, `enable`, and `disable`.

*   `sslCertificates` -
    (Optional)
    A list of SslCertificate resources that are used to authenticate
    connections between users and the load balancer. At least one SSL
    certificate must be specified.

*   `certificateMap` -
    (Optional)
    A reference to the CertificateMap resource uri that identifies a certificate map
    associated with the given target proxy. This field can only be set for global target proxies.
    Accepted format is `//certificatemanagerGoogleapisCom/projects/{project}/locations/{location}/certificateMaps/{resourceName}`.

*   `sslPolicy` -
    (Optional)
    A reference to the SslPolicy resource that will be associated with
    the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
    resource will not have any SSL policy configured.

*   `proxyBind` -
    (Optional)
    This field only applies when the forwarding rule that references
    this target proxy has a loadBalancingScheme set to INTERNAL\_SELF\_MANAGED.

*   `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

*   `id` - an identifier for the resource with format `projects/{{project}}/global/targetHttpsProxies/{{name}}`

*   `creationTimestamp` -
    Creation timestamp in RFC3339 text format.

*   `proxyId` -
    The unique identifier for the resource.

*   `selfLink` - The URI of the created resource.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

* `create` - Default is 20 minutes.
* `update` - Default is 20 minutes.
* `delete` - Default is 20 minutes.

## Import

TargetHttpsProxy can be imported using any of these accepted formats:

```console
$ terraform import google_compute_target_https_proxy.default projects/{{project}}/global/targetHttpsProxies/{{name}}
$ terraform import google_compute_target_https_proxy.default {{project}}/{{name}}
$ terraform import google_compute_target_https_proxy.default {{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
