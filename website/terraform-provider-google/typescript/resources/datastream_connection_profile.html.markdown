---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Datastream"
description: |-
  A set of reusable connection configurations to be used as a source or destination for a stream.
---

# googleDatastreamConnectionProfile

A set of reusable connection configurations to be used as a source or destination for a stream.

To get more information about ConnectionProfile, see:

* [API documentation](https://cloud.google.com/datastream/docs/reference/rest/v1/projects.locations.connectionProfiles)
* How-to Guides
  * [Official Documentation](https://cloud.google.com/datastream/docs/create-connection-profiles)

\~> **Warning:** All arguments including `oracleProfilePassword`, `mysqlProfilePassword`, `mysqlProfileSslConfigClientKey`, `mysqlProfileSslConfigClientCertificate`, `mysqlProfileSslConfigCaCertificate`, `postgresqlProfilePassword`, `forwardSshConnectivityPassword`, and `forwardSshConnectivityPrivateKey` will be stored in the raw
state as plain-text. [Read more about sensitive data in state](https://www.terraform.io/language/state/sensitive-data).

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=datastream_connection_profile_basic&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Datastream Connection Profile Basic

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: google.
For a more precise conversion please use the --provider flag in convert.*/
new google.datastreamConnectionProfile.DatastreamConnectionProfile(
  this,
  "default",
  {
    connection_profile_id: "my-profile",
    display_name: "Connection profile",
    gcs_profile: [
      {
        bucket: "my-bucket",
        root_path: "/path",
      },
    ],
    location: "us-central1",
  }
);

```

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=datastream_connection_profile_bigquery_private_connection&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Datastream Connection Profile Bigquery Private Connection

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: google.
For a more precise conversion please use the --provider flag in convert.*/
const googleComputeNetworkDefault = new google.computeNetwork.ComputeNetwork(
  this,
  "default",
  {
    name: "my-network",
  }
);
const googleDatastreamPrivateConnectionPrivateConnection =
  new google.datastreamPrivateConnection.DatastreamPrivateConnection(
    this,
    "private_connection",
    {
      display_name: "Connection profile",
      labels: [
        {
          key: "value",
        },
      ],
      location: "us-central1",
      private_connection_id: "my-connection",
      vpc_peering_config: [
        {
          subnet: "10.0.0.0/29",
          vpc: googleComputeNetworkDefault.id,
        },
      ],
    }
  );
const googleDatastreamConnectionProfileDefault =
  new google.datastreamConnectionProfile.DatastreamConnectionProfile(
    this,
    "default_2",
    {
      bigquery_profile: [{}],
      connection_profile_id: "my-profile",
      display_name: "Connection profile",
      location: "us-central1",
      private_connectivity: [
        {
          private_connection:
            googleDatastreamPrivateConnectionPrivateConnection.id,
        },
      ],
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
googleDatastreamConnectionProfileDefault.overrideLogicalId("default");

```

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=datastream_connection_profile_full&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Datastream Connection Profile Full

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: google.
For a more precise conversion please use the --provider flag in convert.*/
new google.datastreamConnectionProfile.DatastreamConnectionProfile(
  this,
  "default",
  {
    connection_profile_id: "my-profile",
    display_name: "Connection profile",
    forward_ssh_connectivity: [
      {
        hostname: "google.com",
        password: "swordfish",
        port: 8022,
        username: "my-user",
      },
    ],
    gcs_profile: [
      {
        bucket: "my-bucket",
        root_path: "/path",
      },
    ],
    labels: [
      {
        key: "value",
      },
    ],
    location: "us-central1",
  }
);

```

## Example Usage - Datastream Connection Profile Postgres

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
import * as random from "./.gen/providers/random";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: google, random.
For a more precise conversion please use the --provider flag in convert.*/
const googleSqlDatabaseInstanceInstance =
  new google.sqlDatabaseInstance.SqlDatabaseInstance(this, "instance", {
    database_version: "POSTGRES_14",
    deletion_protection: "true",
    name: "my-instance",
    region: "us-central1",
    settings: [
      {
        ip_configuration: [
          {
            authorized_networks: [
              {
                value: "34.71.242.81",
              },
              {
                value: "34.72.28.29",
              },
              {
                value: "34.67.6.157",
              },
              {
                value: "34.67.234.134",
              },
              {
                value: "34.72.239.218",
              },
            ],
          },
        ],
        tier: "db-f1-micro",
      },
    ],
  });
const randomPasswordPwd = new random.password.Password(this, "pwd", {
  length: 16,
  special: false,
});
const googleSqlDatabaseDb = new google.sqlDatabase.SqlDatabase(this, "db", {
  instance: googleSqlDatabaseInstanceInstance.name,
  name: "db",
});
const googleSqlUserUser = new google.sqlUser.SqlUser(this, "user", {
  instance: googleSqlDatabaseInstanceInstance.name,
  name: "user",
  password: randomPasswordPwd.result,
});
new google.datastreamConnectionProfile.DatastreamConnectionProfile(
  this,
  "default",
  {
    connection_profile_id: "my-profile",
    display_name: "Connection profile",
    location: "us-central1",
    postgresql_profile: [
      {
        database: googleSqlDatabaseDb.name,
        hostname: googleSqlDatabaseInstanceInstance.publicIpAddress,
        password: googleSqlUserUser.password,
        username: googleSqlUserUser.name,
      },
    ],
  }
);

```

## Argument Reference

The following arguments are supported:

*   `displayName` -
    (Required)
    Display name.

*   `connectionProfileId` -
    (Required)
    The connection profile identifier.

*   `location` -
    (Required)
    The name of the location this connection profile is located in.

***

*   `labels` -
    (Optional)
    Labels.

*   `oracleProfile` -
    (Optional)
    Oracle database profile.
    Structure is [documented below](#nested_oracle_profile).

*   `gcsProfile` -
    (Optional)
    Cloud Storage bucket profile.
    Structure is [documented below](#nested_gcs_profile).

*   `mysqlProfile` -
    (Optional)
    MySQL database profile.
    Structure is [documented below](#nested_mysql_profile).

*   `bigqueryProfile` -
    (Optional)
    BigQuery warehouse profile.

*   `postgresqlProfile` -
    (Optional)
    PostgreSQL database profile.
    Structure is [documented below](#nested_postgresql_profile).

*   `forwardSshConnectivity` -
    (Optional)
    Forward SSH tunnel connectivity.
    Structure is [documented below](#nested_forward_ssh_connectivity).

*   `privateConnectivity` -
    (Optional)
    Private connectivity.
    Structure is [documented below](#nested_private_connectivity).

*   `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.

<a name="nested_oracle_profile"></a>The `oracleProfile` block supports:

*   `hostname` -
    (Required)
    Hostname for the Oracle connection.

*   `port` -
    (Optional)
    Port for the Oracle connection.

*   `username` -
    (Required)
    Username for the Oracle connection.

*   `password` -
    (Required)
    Password for the Oracle connection.
    **Note**: This property is sensitive and will not be displayed in the plan.

*   `databaseService` -
    (Required)
    Database for the Oracle connection.

*   `connectionAttributes` -
    (Optional)
    Connection string attributes

<a name="nested_gcs_profile"></a>The `gcsProfile` block supports:

*   `bucket` -
    (Required)
    The Cloud Storage bucket name.

*   `rootPath` -
    (Optional)
    The root path inside the Cloud Storage bucket.

<a name="nested_mysql_profile"></a>The `mysqlProfile` block supports:

*   `hostname` -
    (Required)
    Hostname for the MySQL connection.

*   `port` -
    (Optional)
    Port for the MySQL connection.

*   `username` -
    (Required)
    Username for the MySQL connection.

*   `password` -
    (Required)
    Password for the MySQL connection.
    **Note**: This property is sensitive and will not be displayed in the plan.

*   `sslConfig` -
    (Optional)
    SSL configuration for the MySQL connection.
    Structure is [documented below](#nested_ssl_config).

<a name="nested_ssl_config"></a>The `sslConfig` block supports:

*   `clientKey` -
    (Optional)
    PEM-encoded private key associated with the Client Certificate.
    If this field is used then the 'client\_certificate' and the
    'ca\_certificate' fields are mandatory.
    **Note**: This property is sensitive and will not be displayed in the plan.

*   `clientKeySet` -
    (Output)
    Indicates whether the clientKey field is set.

*   `clientCertificate` -
    (Optional)
    PEM-encoded certificate that will be used by the replica to
    authenticate against the source database server. If this field
    is used then the 'clientKey' and the 'caCertificate' fields are
    mandatory.
    **Note**: This property is sensitive and will not be displayed in the plan.

*   `clientCertificateSet` -
    (Output)
    Indicates whether the clientCertificate field is set.

*   `caCertificate` -
    (Optional)
    PEM-encoded certificate of the CA that signed the source database
    server's certificate.
    **Note**: This property is sensitive and will not be displayed in the plan.

*   `caCertificateSet` -
    (Output)
    Indicates whether the clientKey field is set.

<a name="nested_postgresql_profile"></a>The `postgresqlProfile` block supports:

*   `hostname` -
    (Required)
    Hostname for the PostgreSQL connection.

*   `port` -
    (Optional)
    Port for the PostgreSQL connection.

*   `username` -
    (Required)
    Username for the PostgreSQL connection.

*   `password` -
    (Required)
    Password for the PostgreSQL connection.
    **Note**: This property is sensitive and will not be displayed in the plan.

*   `database` -
    (Required)
    Database for the PostgreSQL connection.

<a name="nested_forward_ssh_connectivity"></a>The `forwardSshConnectivity` block supports:

*   `hostname` -
    (Required)
    Hostname for the SSH tunnel.

*   `username` -
    (Required)
    Username for the SSH tunnel.

*   `port` -
    (Optional)
    Port for the SSH tunnel.

*   `password` -
    (Optional)
    SSH password.
    **Note**: This property is sensitive and will not be displayed in the plan.

*   `privateKey` -
    (Optional)
    SSH private key.
    **Note**: This property is sensitive and will not be displayed in the plan.

<a name="nested_private_connectivity"></a>The `privateConnectivity` block supports:

* `privateConnection` -
  (Required)
  A reference to a private connection resource. Format: `projects/{project}/locations/{location}/privateConnections/{name}`

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

*   `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/connectionProfiles/{{connectionProfileId}}`

*   `name` -
    The resource's name.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

* `create` - Default is 20 minutes.
* `update` - Default is 20 minutes.
* `delete` - Default is 20 minutes.

## Import

ConnectionProfile can be imported using any of these accepted formats:

```console
$ terraform import google_datastream_connection_profile.default projects/{{project}}/locations/{{location}}/connectionProfiles/{{connection_profile_id}}
$ terraform import google_datastream_connection_profile.default {{project}}/{{location}}/{{connection_profile_id}}
$ terraform import google_datastream_connection_profile.default {{location}}/{{connection_profile_id}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
