---
subcategory: "Data Factory"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_data_factory_integration_runtime_azure_ssis"
description: |-
  Manages a Data Factory Azure-SSIS Integration Runtime.
---

# azurerm\_data\_factory\_integration\_runtime\_azure\_ssis

Manages a Data Factory Azure-SSIS Integration Runtime.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example",
  {
    location: "West Europe",
    name: "example-resources",
  }
);
const azurermDataFactoryExample = new azurerm.dataFactory.DataFactory(
  this,
  "example_1",
  {
    location: azurermResourceGroupExample.location,
    name: "example",
    resource_group_name: azurermResourceGroupExample.name,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermDataFactoryExample.overrideLogicalId("example");
const azurermDataFactoryIntegrationRuntimeAzureSsisExample =
  new azurerm.dataFactoryIntegrationRuntimeAzureSsis.DataFactoryIntegrationRuntimeAzureSsis(
    this,
    "example_2",
    {
      data_factory_id: azurermDataFactoryExample.id,
      location: azurermResourceGroupExample.location,
      name: "example",
      node_size: "Standard_D8_v3",
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermDataFactoryIntegrationRuntimeAzureSsisExample.overrideLogicalId(
  "example"
);

```

## Argument Reference

The following arguments are supported:

*   `name` - (Required) Specifies the name of the Azure-SSIS Integration Runtime. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.

*   `dataFactoryId` - (Required) The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.

*   `location` - (Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

*   `nodeSize` - (Required) The size of the nodes on which the Azure-SSIS Integration Runtime runs. Valid values are: `standardD2V3`, `standardD4V3`, `standardD8V3`, `standardD16V3`, `standardD32V3`, `standardD64V3`, `standardE2V3`, `standardE4V3`, `standardE8V3`, `standardE16V3`, `standardE32V3`, `standardE64V3`, `standardD1V2`, `standardD2V2`, `standardD3V2`, `standardD4V2`, `standardA4V2` and `standardA8V2`

*   `numberOfNodes` - (Optional) Number of nodes for the Azure-SSIS Integration Runtime. Max is `10`. Defaults to `1`.

*   `maxParallelExecutionsPerNode` - (Optional) Defines the maximum parallel executions per node. Defaults to `1`. Max is `16`.

*   `edition` - (Optional) The Azure-SSIS Integration Runtime edition. Valid values are `standard` and `enterprise`. Defaults to `standard`.

*   `licenseType` - (Optional) The type of the license that is used. Valid values are `licenseIncluded` and `basePrice`. Defaults to `licenseIncluded`.

*   `catalogInfo` - (Optional) A `catalogInfo` block as defined below.

*   `customSetupScript` - (Optional) A `customSetupScript` block as defined below.

*   `expressCustomSetup` - (Optional) An `expressCustomSetup` block as defined below.

*   `expressVnetIntegration` - (Optional) A `expressVnetIntegration` block as defined below.

*   `packageStore` - (Optional) One or more `packageStore` block as defined below.

*   `proxy` - (Optional) A `proxy` block as defined below.

*   `vnetIntegration` - (Optional) A `vnetIntegration` block as defined below.

*   `description` - (Optional) Integration runtime description.

***

A `catalogInfo` block supports the following:

*   `serverEndpoint` - (Required) The endpoint of an Azure SQL Server that will be used to host the SSIS catalog.

*   `administratorLogin` - (Optional) Administrator login name for the SQL Server.

*   `administratorPassword` - (Optional) Administrator login password for the SQL Server.

*   `pricingTier` - (Optional) Pricing tier for the database that will be created for the SSIS catalog. Valid values are: `basic`, `s0`, `s1`, `s2`, `s3`, `s4`, `s6`, `s7`, `s9`, `s12`, `p1`, `p2`, `p4`, `p6`, `p11`, `p15`, `gpSGen51`, `gpSGen52`, `gpSGen54`, `gpSGen56`, `gpSGen58`, `gpSGen510`, `gpSGen512`, `gpSGen514`, `gpSGen516`, `gpSGen518`, `gpSGen520`, `gpSGen524`, `gpSGen532`, `gpSGen540`, `gpGen52`, `gpGen54`, `gpGen56`, `gpGen58`, `gpGen510`, `gpGen512`, `gpGen514`, `gpGen516`, `gpGen518`, `gpGen520`, `gpGen524`, `gpGen532`, `gpGen540`, `gpGen580`, `bcGen52`, `bcGen54`, `bcGen56`, `bcGen58`, `bcGen510`, `bcGen512`, `bcGen514`, `bcGen516`, `bcGen518`, `bcGen520`, `bcGen524`, `bcGen532`, `bcGen540`, `bcGen580`, `hsGen52`, `hsGen54`, `hsGen56`, `hsGen58`, `hsGen510`, `hsGen512`, `hsGen514`, `hsGen516`, `hsGen518`, `hsGen520`, `hsGen524`, `hsGen532`, `hsGen540` and `hsGen580`. Mutually exclusive with `elasticPoolName`.

*   `elasticPoolName` - (Optional) The name of SQL elastic pool where the database will be created for the SSIS catalog. Mutually exclusive with `pricingTier`.

*   `dualStandbyPairName` - (Optional) The dual standby Azure-SSIS Integration Runtime pair with SSISDB failover.

***

A `customSetupScript` block supports the following:

*   `blobContainerUri` - (Required) The blob endpoint for the container which contains a custom setup script that will be run on every node on startup. See <https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup> for more information.

*   `sasToken` - (Required) A container SAS token that gives access to the files. See <https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup> for more information.

***

An `expressCustomSetup` block supports the following:

*   `commandKey` - (Optional) One or more `commandKey` blocks as defined below.

*   `component` - (Optional) One or more `component` blocks as defined below.

*   `environment` - (Optional) The Environment Variables for the Azure-SSIS Integration Runtime.

*   `powershellVersion` - (Optional) The version of Azure Powershell installed for the Azure-SSIS Integration Runtime.

\~> **NOTE** At least one of `env`, `powershellVersion`, `component` and `commandKey` should be specified.

***

A `expressVnetIntegration` block supports the following:

* `subnetId` - (Required) id of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.

***

A `commandKey` block supports the following:

*   `targetName` - (Required) The target computer or domain name.

*   `userName` - (Required) The username for the target device.

*   `password` - (Optional) The password for the target device.

*   `keyVaultPassword` - (Optional) A `keyVaultSecretReference` block as defined below.

***

A `component` block supports the following:

*   `name` - (Required) The Component Name installed for the Azure-SSIS Integration Runtime.

*   `license` - (Optional) The license used for the Component.

*   `keyVaultLicense` - (Optional) A `keyVaultSecretReference` block as defined below.

***

A `keyVaultSecretReference` block supports the following:

*   `linkedServiceName` - (Required) Specifies the name of an existing Key Vault Data Factory Linked Service.

*   `secretName` - (Required) Specifies the secret name in Azure Key Vault.

*   `secretVersion` - (Optional) Specifies the secret version in Azure Key Vault.

*   `parameters` - (Optional) A map of parameters to associate with the Key Vault Data Factory Linked Service.

***

A `packageStore` block supports the following:

*   `name` - (Required) Name of the package store.

*   `linkedServiceName` - (Required) Name of the Linked Service to associate with the packages.

***

A `proxy` block supports the following:

*   `selfHostedIntegrationRuntimeName` - (Required) Name of Self Hosted Integration Runtime as a proxy.

*   `stagingStorageLinkedServiceName` - (Required) Name of Azure Blob Storage linked service to reference the staging data store to be used when moving data between self-hosted and Azure-SSIS integration runtimes.

*   `path` - (Optional) The path in the data store to be used when moving data between Self-Hosted and Azure-SSIS Integration Runtimes.

***

A `vnetIntegration` block supports the following:

*   `vnetId` - (Optional) ID of the virtual network to which the nodes of the Azure-SSIS Integration Runtime will be added.

*   `subnetName` - (Optional) Name of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.

*   `subnetId` - (Optional) id of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.

\-> **NOTE** Only one of `subnetId` and `subnetName` can be specified. If `subnetName` is specified, `vnetId` must be provided.

* `publicIps` - (Optional) Static public IP addresses for the Azure-SSIS Integration Runtime. The size must be 2.

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the Data Factory Azure-SSIS Integration Runtime.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Data Factory Azure-SSIS Integration Runtime.
* `update` - (Defaults to 30 minutes) Used when updating the Data Factory Azure-SSIS Integration Runtime.
* `read` - (Defaults to 5 minutes) Used when retrieving the Data Factory Azure-SSIS Integration Runtime.
* `delete` - (Defaults to 30 minutes) Used when deleting the Data Factory Azure-SSIS Integration Runtime.

## Import

Data Factory Azure-SSIS Integration Runtimes can be imported using the `resourceId`, e.g.

```shell
terraform import azurerm_data_factory_integration_runtime_azure_ssis.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.DataFactory/factories/example/integrationruntimes/example
```
