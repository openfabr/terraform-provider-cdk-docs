---
subcategory: "DataProtection"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_data_protection_backup_instance_blob_storage"
description: |-
  Manages a Backup Instance Blob Storage.
---

# azurerm\_data\_protection\_backup\_instance\_blob\_storage

Manages a Backup Instance Blob Storage.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example",
  {
    location: "West Europe",
    name: "example-resources",
  }
);
const azurermStorageAccountExample = new azurerm.storageAccount.StorageAccount(
  this,
  "example_1",
  {
    account_replication_type: "LRS",
    account_tier: "Standard",
    location: azurermResourceGroupExample.location,
    name: "storageaccountname",
    resource_group_name: azurermResourceGroupExample.name,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermStorageAccountExample.overrideLogicalId("example");
const azurermDataProtectionBackupVaultExample =
  new azurerm.dataProtectionBackupVault.DataProtectionBackupVault(
    this,
    "example_2",
    {
      datastore_type: "VaultStore",
      identity: [
        {
          type: "SystemAssigned",
        },
      ],
      location: azurermResourceGroupExample.location,
      name: "example-backup-vault",
      redundancy: "LocallyRedundant",
      resource_group_name: azurermResourceGroupExample.name,
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermDataProtectionBackupVaultExample.overrideLogicalId("example");
const azurermRoleAssignmentExample = new azurerm.roleAssignment.RoleAssignment(
  this,
  "example_3",
  {
    principal_id: `\${${azurermDataProtectionBackupVaultExample.identity.fqn}[0].principal_id}`,
    role_definition_name: "Storage Account Backup Contributor",
    scope: azurermStorageAccountExample.id,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermRoleAssignmentExample.overrideLogicalId("example");
const azurermDataProtectionBackupPolicyBlobStorageExample =
  new azurerm.dataProtectionBackupPolicyBlobStorage.DataProtectionBackupPolicyBlobStorage(
    this,
    "example_4",
    {
      name: "example-backup-policy",
      retention_duration: "P30D",
      vault_id: azurermDataProtectionBackupVaultExample.id,
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermDataProtectionBackupPolicyBlobStorageExample.overrideLogicalId(
  "example"
);
const azurermDataProtectionBackupInstanceBlobStorageExample =
  new azurerm.dataProtectionBackupInstanceBlobStorage.DataProtectionBackupInstanceBlobStorage(
    this,
    "example_5",
    {
      backup_policy_id: azurermDataProtectionBackupPolicyBlobStorageExample.id,
      depends_on: [`\${${azurermRoleAssignmentExample.fqn}}`],
      location: azurermResourceGroupExample.location,
      name: "example-backup-instance",
      storage_account_id: azurermStorageAccountExample.id,
      vault_id: azurermDataProtectionBackupVaultExample.id,
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermDataProtectionBackupInstanceBlobStorageExample.overrideLogicalId(
  "example"
);

```

## Arguments Reference

The following arguments are supported:

*   `name` - (Required) The name which should be used for this Backup Instance Blob Storage. Changing this forces a new Backup Instance Blob Storage to be created.

*   `location` - (Required) The location of the source Storage Account. Changing this forces a new Backup Instance Blob Storage to be created.

*   `vaultId` - (Required) The ID of the Backup Vault within which the Backup Instance Blob Storage should exist. Changing this forces a new Backup Instance Blob Storage to be created.

*   `storageAccountId` - (Required) The ID of the source Storage Account. Changing this forces a new Backup Instance Blob Storage to be created.

*   `backupPolicyId` - (Required) The ID of the Backup Policy.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Backup Instance Blob Storage.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Backup Instance Blob Storage.
* `read` - (Defaults to 5 minutes) Used when retrieving the Backup Instance Blob Storage.
* `update` - (Defaults to 30 minutes) Used when updating the Backup Instance Blob Storage.
* `delete` - (Defaults to 30 minutes) Used when deleting the Backup Instance Blob Storage.

## Import

Backup Instance Blob Storages can be imported using the `resourceId`, e.g.

```shell
terraform import azurerm_data_protection_backup_instance_blob_storage.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupInstances/backupInstance1
```
