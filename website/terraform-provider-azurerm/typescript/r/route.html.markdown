---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_route"
description: |-
  Manages a Route within a Route Table.
---

# azurerm\_route

Manages a Route within a Route Table.

\~> **NOTE on Route Tables and Routes:** Terraform currently
provides both a standalone [Route resource](route.html), and allows for Routes to be defined in-line within the [Route Table resource](route_table.html).
At this time you cannot use a Route Table with in-line Routes in conjunction with any Route resources. Doing so will cause a conflict of Route configurations and will overwrite Routes.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example",
  {
    location: "West Europe",
    name: "example-resources",
  }
);
const azurermRouteTableExample = new azurerm.routeTable.RouteTable(
  this,
  "example_1",
  {
    location: azurermResourceGroupExample.location,
    name: "acceptanceTestRouteTable1",
    resource_group_name: azurermResourceGroupExample.name,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermRouteTableExample.overrideLogicalId("example");
const azurermRouteExample = new azurerm.route.Route(this, "example_2", {
  address_prefix: "10.1.0.0/16",
  name: "acceptanceTestRoute1",
  next_hop_type: "VnetLocal",
  resource_group_name: azurermResourceGroupExample.name,
  route_table_name: azurermRouteTableExample.name,
});
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermRouteExample.overrideLogicalId("example");

```

## Argument Reference

The following arguments are supported:

*   `name` - (Required) The name of the route. Changing this forces a new resource to be created.

*   `resourceGroupName` - (Required) The name of the resource group in which to create the route. Changing this forces a new resource to be created.

*   `routeTableName` - (Required) The name of the route table within which create the route. Changing this forces a new resource to be created.

*   `addressPrefix` - (Required) The destination to which the route applies. Can be CIDR (such as `10100/16`) or [Azure Service Tag](https://docs.microsoft.com/azure/virtual-network/service-tags-overview) (such as `apiManagement`, `azureBackup` or `azureMonitor`) format.

*   `nextHopType` - (Required) The type of Azure hop the packet should be sent to. Possible values are `virtualNetworkGateway`, `vnetLocal`, `internet`, `virtualAppliance` and `none`.

*   `nextHopInIpAddress` - (Optional) Contains the IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is `virtualAppliance`.

## Attributes Reference

The following attributes are exported:

* `id` - The Route ID.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Route.
* `update` - (Defaults to 30 minutes) Used when updating the Route.
* `read` - (Defaults to 5 minutes) Used when retrieving the Route.
* `delete` - (Defaults to 30 minutes) Used when deleting the Route.

## Import

Routes can be imported using the `resourceId`, e.g.

```shell
terraform import azurerm_route.exampleRoute /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/routeTables/mytable1/routes/myroute1
```
