---
subcategory: "Data Factory"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_data_factory_dataset_postgresql"
description: |-
  Manages a PostgreSQL Dataset inside a Azure Data Factory.
---

# azurerm\_data\_factory\_dataset\_postgresql

Manages a PostgreSQL Dataset inside a Azure Data Factory.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example",
  {
    location: "West Europe",
    name: "example-resources",
  }
);
const azurermDataFactoryExample = new azurerm.dataFactory.DataFactory(
  this,
  "example_1",
  {
    location: azurermResourceGroupExample.location,
    name: "example",
    resource_group_name: azurermResourceGroupExample.name,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermDataFactoryExample.overrideLogicalId("example");
const azurermDataFactoryLinkedServicePostgresqlExample =
  new azurerm.dataFactoryLinkedServicePostgresql.DataFactoryLinkedServicePostgresql(
    this,
    "example_2",
    {
      connection_string:
        "Host=example;Port=5432;Database=example;UID=example;EncryptionMethod=0;Password=example",
      data_factory_id: azurermDataFactoryExample.id,
      name: "example",
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermDataFactoryLinkedServicePostgresqlExample.overrideLogicalId("example");
const azurermDataFactoryDatasetPostgresqlExample =
  new azurerm.dataFactoryDatasetPostgresql.DataFactoryDatasetPostgresql(
    this,
    "example_3",
    {
      data_factory_id: azurermDataFactoryExample.id,
      linked_service_name:
        azurermDataFactoryLinkedServicePostgresqlExample.name,
      name: "example",
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermDataFactoryDatasetPostgresqlExample.overrideLogicalId("example");

```

## Argument Reference

The following arguments are supported:

*   `name` - (Required) Specifies the name of the Data Factory Dataset PostgreSQL. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.

*   `dataFactoryId` - (Required) The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.

*   `linkedServiceName` - (Required) The Data Factory Linked Service name in which to associate the Dataset with.

*   `tableName` - (Optional) The table name of the Data Factory Dataset PostgreSQL.

*   `folder` - (Optional) The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.

*   `schemaColumn` - (Optional) A `schemaColumn` block as defined below.

*   `description` - (Optional) The description for the Data Factory Dataset PostgreSQL.

*   `annotations` - (Optional) List of tags that can be used for describing the Data Factory Dataset PostgreSQL.

*   `parameters` - (Optional) A map of parameters to associate with the Data Factory Dataset PostgreSQL.

*   `additionalProperties` - (Optional) A map of additional properties to associate with the Data Factory Dataset PostgreSQL.

***

A `schemaColumn` block supports the following:

*   `name` - (Required) The name of the column.

*   `type` - (Optional) Type of the column. Valid values are `byte`, `byte[]`, `boolean`, `date`, `dateTime`,`dateTimeOffset`, `decimal`, `double`, `guid`, `int16`, `int32`, `int64`, `single`, `string`, `timeSpan`. Please note these values are case sensitive.

*   `description` - (Optional) The description of the column.

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the Data Factory PostgreSQL Dataset.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Data Factory PostgreSQL Dataset.
* `update` - (Defaults to 30 minutes) Used when updating the Data Factory PostgreSQL Dataset.
* `read` - (Defaults to 5 minutes) Used when retrieving the Data Factory PostgreSQL Dataset.
* `delete` - (Defaults to 30 minutes) Used when deleting the Data Factory PostgreSQL Dataset.

## Import

Data Factory PostgreSQL Datasets can be imported using the `resourceId`, e.g.

```shell
terraform import azurerm_data_factory_dataset_postgresql.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.DataFactory/factories/example/datasets/example
```
