---
subcategory: "Logic App"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_logic_app_trigger_http_request"
description: |-
  Manages a HTTP Request Trigger within a Logic App Workflow
---

# azurerm\_logic\_app\_trigger\_http\_request

Manages a HTTP Request Trigger within a Logic App Workflow

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example",
  {
    location: "West Europe",
    name: "workflow-resources",
  }
);
const azurermLogicAppWorkflowExample =
  new azurerm.logicAppWorkflow.LogicAppWorkflow(this, "example_1", {
    location: azurermResourceGroupExample.location,
    name: "workflow1",
    resource_group_name: azurermResourceGroupExample.name,
  });
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermLogicAppWorkflowExample.overrideLogicalId("example");
const azurermLogicAppTriggerHttpRequestExample =
  new azurerm.logicAppTriggerHttpRequest.LogicAppTriggerHttpRequest(
    this,
    "example_2",
    {
      logic_app_id: azurermLogicAppWorkflowExample.id,
      name: "some-http-trigger",
      schema:
        '{\n    "type": "object",\n    "properties": {\n        "hello": {\n            "type": "string"\n        }\n    }\n}\n',
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermLogicAppTriggerHttpRequestExample.overrideLogicalId("example");

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the HTTP Request Trigger to be created within the Logic App Workflow. Changing this forces a new resource to be created.

\-> **NOTE:** This name must be unique across all Triggers within the Logic App Workflow.

*   `logicAppId` - (Required) Specifies the ID of the Logic App Workflow. Changing this forces a new resource to be created.

*   `schema` - (Required) A JSON Blob defining the Schema of the incoming request. This needs to be valid JSON.

\-> **NOTE:** To make the Trigger more readable, you may wish to consider using HEREDOC syntax (as shown above) or [the `localFile` resource](https://www.terraform.io/docs/providers/local/d/file.html) to load the schema from a file on disk.

*   `method` - (Optional) Specifies the HTTP Method which the request be using. Possible values include `delete`, `get`, `patch`, `post` or `put`.

*   `relativePath` - (Optional) Specifies the Relative Path used for this Request.

\-> **NOTE:** When `relativePath` is set a `method` must also be set.

## Attributes Reference

The following attributes are exported:

*   `id` - The ID of the HTTP Request Trigger within the Logic App Workflow.

*   `callbackUrl` - The URL for the workflow trigger

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Logic App HTTP Request Trigger.
* `update` - (Defaults to 30 minutes) Used when updating the Logic App HTTP Request Trigger.
* `read` - (Defaults to 5 minutes) Used when retrieving the Logic App HTTP Request Trigger.
* `delete` - (Defaults to 30 minutes) Used when deleting the Logic App HTTP Request Trigger.

## Import

Logic App HTTP Request Triggers can be imported using the `resourceId`, e.g.

```shell
terraform import azurerm_logic_app_trigger_http_request.request1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Logic/workflows/workflow1/triggers/request1
```

\-> **NOTE:** This ID is unique to Terraform and doesn't directly match to any other resource. To compose this ID, you can take the ID Logic App Workflow and append `/triggers/{nameOfTheTrigger}`.
