---
subcategory: "Logic App"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_integration_service_environment"
description: |-
  Manages private and isolated Logic App instances within an Azure virtual network.
---

# azurerm\_integration\_service\_environment

Manages private and isolated Logic App instances within an Azure virtual network.

!> **NOTE:** The `azurermIntegrationServiceEnvironment` resource is deprecated and will be removed in v4.0 of the Azure Provider. The underlying Azure Service is being retired on 2024-08-31 and new instances cannot be provisioned by default after 2022-11-01. More information on the retirement and how to migrate to [Logic Apps Standard](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/logic_app_standard) [can be found here](https://aka.ms/isedeprecation).

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example",
  {
    location: "West Europe",
    name: "exampleRG1",
  }
);
const azurermVirtualNetworkExample = new azurerm.virtualNetwork.VirtualNetwork(
  this,
  "example_1",
  {
    address_space: ["10.0.0.0/22"],
    location: azurermResourceGroupExample.location,
    name: "example-vnet1",
    resource_group_name: azurermResourceGroupExample.name,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermVirtualNetworkExample.overrideLogicalId("example");
const azurermSubnetIsesubnet1 = new azurerm.subnet.Subnet(this, "isesubnet1", {
  address_prefixes: ["10.0.1.0/27"],
  delegation: [
    {
      name: "integrationServiceEnvironments",
      service_delegation: [
        {
          name: "Microsoft.Logic/integrationServiceEnvironments",
        },
      ],
    },
  ],
  name: "isesubnet1",
  resource_group_name: azurermResourceGroupExample.name,
  virtual_network_name: azurermVirtualNetworkExample.name,
});
const azurermSubnetIsesubnet2 = new azurerm.subnet.Subnet(this, "isesubnet2", {
  address_prefixes: ["10.0.1.32/27"],
  name: "isesubnet2",
  resource_group_name: azurermResourceGroupExample.name,
  virtual_network_name: azurermVirtualNetworkExample.name,
});
const azurermSubnetIsesubnet3 = new azurerm.subnet.Subnet(this, "isesubnet3", {
  address_prefixes: ["10.0.1.64/27"],
  name: "isesubnet3",
  resource_group_name: azurermResourceGroupExample.name,
  virtual_network_name: azurermVirtualNetworkExample.name,
});
const azurermSubnetIsesubnet4 = new azurerm.subnet.Subnet(this, "isesubnet4", {
  address_prefixes: ["10.0.1.96/27"],
  name: "isesubnet4",
  resource_group_name: azurermResourceGroupExample.name,
  virtual_network_name: azurermVirtualNetworkExample.name,
});
const azurermIntegrationServiceEnvironmentExample =
  new azurerm.integrationServiceEnvironment.IntegrationServiceEnvironment(
    this,
    "example_6",
    {
      access_endpoint_type: "Internal",
      location: azurermResourceGroupExample.location,
      name: "example-ise",
      resource_group_name: azurermResourceGroupExample.name,
      sku_name: "Developer_0",
      tags: {
        environment: "development",
      },
      virtual_network_subnet_ids: [
        azurermSubnetIsesubnet1.id,
        azurermSubnetIsesubnet2.id,
        azurermSubnetIsesubnet3.id,
        azurermSubnetIsesubnet4.id,
      ],
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermIntegrationServiceEnvironmentExample.overrideLogicalId("example");

```

## Arguments Reference

The following arguments are supported:

*   `name` - (Required) The name of the Integration Service Environment. Changing this forces a new Integration Service Environment to be created.

*   `resourceGroupName` - (Required) The name of the Resource Group where the Integration Service Environment should exist. Changing this forces a new Integration Service Environment to be created.

*   `location` - (Required) The Azure Region where the Integration Service Environment should exist. Changing this forces a new Integration Service Environment to be created.

*   `skuName` - (Optional) The SKU name and capacity of the Integration Service Environment. Possible values are `developer0`, `premium0`, `premium1`, `premium2`, `premium3`, `premium4`, `premium5`, `premium6`, `premium7`, `premium8`, `premium9` and `premium10`.

\~> **NOTE** For a `skuName` using the `developer` `sku` the `capacity` element must be always `0`. For a `skuName` using the `sku` of `premium` the `capacity` element can be between `0` and `10`.

*   `accessEndpointType` - (Required) The type of access endpoint to use for the Integration Service Environment. Possible Values are `internal` and `external`. Changing this forces a new Integration Service Environment to be created.

*   `virtualNetworkSubnetIds` - (Required) A list of virtual network subnet ids to be used by Integration Service Environment. Exactly four distinct ids to `/27` subnets must be provided. Changing this forces a new Integration Service Environment to be created.

***

* `tags` - (Optional) A mapping of tags which should be assigned to the Integration Service Environment.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

*   `id` - The ID of the Integration Service Environment.

*   `connectorEndpointIpAddresses` - The list of access endpoint IP addresses of connector.

*   `connectorOutboundIpAddresses` - The list of outgoing IP addresses of connector.

*   `workflowEndpointIpAddresses` - The list of access endpoint IP addresses of workflow.

*   `workflowOutboundIpAddresses` - The list of outgoing IP addresses of workflow.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 5 hours) Used when creating the Integration Service Environment.
* `read` - (Defaults to 5 minutes) Used when retrieving the Integration Service Environment.
* `update` - (Defaults to 5 hours) Used when updating the Integration Service Environment.
* `delete` - (Defaults to 5 hours) Used when deleting the Integration Service Environment.

## Import

Integration Service Environments can be imported using the `resourceId`, e.g.

```shell
terraform import azurerm_integration_service_environment.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Logic/integrationServiceEnvironments/ise1
```
