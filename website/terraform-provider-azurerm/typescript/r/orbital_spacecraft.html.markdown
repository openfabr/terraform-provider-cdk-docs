---
subcategory: "Orbital"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_orbital_spacecraft"
description: |-
  Manages a Spacecraft resource.
---

# azurerm\_orbital\_spacecraft

Manages a Spacecraft.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
new azurerm.orbitalSpacecraft.OrbitalSpacecraft(this, "example", {
  links: [
    {
      bandwidth_mhz: 100,
      center_frequency_mhz: 101,
      direction: "Uplink",
      name: "examplename",
      polarization: "LHCP",
    },
  ],
  location: "westeurope",
  name: "example-spacecraft",
  norad_id: "12345",
  resource_group_name: "${azurerm_resource_group.test.name}",
  tags: {
    "aks-managed-cluster-name": "9a57225d-a405-4d40-aa46-f13d2342abef",
  },
  title_line: "AQUA",
  two_line_elements: [
    "1 23455U 94089A   97320.90946019  .00000140  00000-0  10191-3 0  2621",
    "2 23455  99.0090 272.6745 0008546 223.1686 136.8816 14.11711747148495",
  ],
});
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example_1",
  {
    location: "West Europe",
    name: "rg-example",
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermResourceGroupExample.overrideLogicalId("example");

```

## Arguments Reference

The following arguments are supported:

*   `name` - (Required) The name of the Spacecraft. Changing this forces a new resource to be created.

*   `resourceGroupName` - (Required) The name of the Resource Group where the Spacecraft exists. Changing this forces a new resource to be created.

*   `location` - (Required) The location where the Spacecraft exists. Changing this forces a new resource to be created.

*   `noradId` - (Required) NORAD ID of the Spacecraft.

*   `links` - (Required) A `links` block as defined below. Changing this forces a new resource to be created.

*   `twoLineElements` - (Required) A list of the two line elements (TLE), the first string being the first of the TLE, the second string being the second line of the TLE. Changing this forces a new resource to be created.

*   `titleLine` - (Required) Title of the two line elements (TLE).

*   `tags` - (Optional) A mapping of tags to assign to the resource.

***

A `links` block supports the following:

*   `bandwidthMhz` - (Required) Bandwidth in Mhz.

*   `centerFrequencyMhz` - (Required) Center frequency in Mhz.

*   `direction` - (Required) Direction if the communication. Possible values are `uplink` and `downlink`.

*   `polarization` - (Required) Polarization. Possible values are `rhcp`, `lhcp`, `linearVertical` and `linearHorizontal`.

*   `name` - (Required) Name of the link.

***

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Spacecraft.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Spacecraft.
* `read` - (Defaults to 5 minutes) Used when retrieving the Spacecraft.
* `update` - (Defaults to 30 minutes) Used when updating the Spacecraft.
* `delete` - (Defaults to 30 minutes) Used when deleting the Spacecraft.

## Import

Spacecraft can be imported using the `resourceId`, e.g.

```shell
terraform import azurerm_orbital_spacecraft.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Orbital/spacecrafts/spacecraft1
```
