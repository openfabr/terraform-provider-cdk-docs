---
subcategory: "Attestation"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_attestation_provider"
description: |-
  Manages a Attestation Provider.
---

# azurerm\_attestation\_provider

Manages a Attestation Provider.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example",
  {
    location: "West Europe",
    name: "example-resources",
  }
);
const azurermAttestationProviderExample =
  new azurerm.attestationProvider.AttestationProvider(this, "example_1", {
    location: azurermResourceGroupExample.location,
    name: "attestationprovider",
    policy_signing_certificate_data: '${file("./example/cert.pem")}',
    resource_group_name: azurermResourceGroupExample.name,
  });
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermAttestationProviderExample.overrideLogicalId("example");

```

## Arguments Reference

The following arguments are supported:

*   `name` - (Required) The name which should be used for this Attestation Provider. Changing this forces a new resource to be created.

*   `resourceGroupName` - (Required) The name of the Resource Group where the attestation provider should exist. Changing this forces a new resource to be created.

*   `location` - (Required) The Azure Region where the Attestation Provider should exist. Changing this forces a new resource to be created.

\-> **NOTE:** Currently only supported in the `eastUs2`, `westCentralUs`, and `ukSouth` regions.

* `policySigningCertificateData` - (Optional) A valid X.509 certificate (Section 4 of [RFC4648](https://tools.ietf.org/html/rfc4648)). Changing this forces a new resource to be created.

\-> **NOTE:** If the `policySigningCertificateData` argument contains more than one valid X.509 certificate only the first certificate will be used.

* `tags` - (Optional) A mapping of tags which should be assigned to the Attestation Provider.

## Attributes Reference

The following Attributes are exported:

*   `id` - The ID of the Attestation Provider.

*   `attestationUri` - The URI of the Attestation Service.

*   `trustModel` - Trust model used for the Attestation Service.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Attestation Provider.
* `read` - (Defaults to 5 minutes) Used when retrieving the Attestation Provider.
* `update` - (Defaults to 30 minutes) Used when updating the Attestation Provider.
* `delete` - (Defaults to 30 minutes) Used when deleting the Attestation Provider.

## Import

Attestation Providers can be imported using the `resourceId`, e.g.

```shell
terraform import azurerm_attestation_provider.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Attestation/attestationProviders/provider1
```
