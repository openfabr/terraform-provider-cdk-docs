---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_virtual_hub_security_partner_provider"
description: |-
  Manages a Security Partner Provider which could be associated to virtual hub.
---

# azurerm\_virtual\_hub\_security\_partner\_provider

Manages a Security Partner Provider which could be associated to virtual hub.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example",
  {
    location: "West Europe",
    name: "example-resources",
  }
);
const azurermVirtualWanExample = new azurerm.virtualWan.VirtualWan(
  this,
  "example_1",
  {
    location: azurermResourceGroupExample.location,
    name: "example-vwan",
    resource_group_name: azurermResourceGroupExample.name,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermVirtualWanExample.overrideLogicalId("example");
const azurermVirtualHubExample = new azurerm.virtualHub.VirtualHub(
  this,
  "example_2",
  {
    address_prefix: "10.0.2.0/24",
    location: azurermResourceGroupExample.location,
    name: "example-vhub",
    resource_group_name: azurermResourceGroupExample.name,
    virtual_wan_id: azurermVirtualWanExample.id,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermVirtualHubExample.overrideLogicalId("example");
const azurermVpnGatewayExample = new azurerm.vpnGateway.VpnGateway(
  this,
  "example_3",
  {
    location: azurermResourceGroupExample.location,
    name: "example-vpngw",
    resource_group_name: azurermResourceGroupExample.name,
    virtual_hub_id: azurermVirtualHubExample.id,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermVpnGatewayExample.overrideLogicalId("example");
const azurermVirtualHubSecurityPartnerProviderExample =
  new azurerm.virtualHubSecurityPartnerProvider.VirtualHubSecurityPartnerProvider(
    this,
    "example_4",
    {
      depends_on: [`\${${azurermVpnGatewayExample.fqn}}`],
      location: azurermResourceGroupExample.location,
      name: "example-spp",
      resource_group_name: azurermResourceGroupExample.name,
      security_provider_name: "IBoss",
      tags: {
        ENV: "Prod",
      },
      virtual_hub_id: azurermVirtualHubExample.id,
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermVirtualHubSecurityPartnerProviderExample.overrideLogicalId("example");

```

## Arguments Reference

The following arguments are supported:

*   `name` - (Required) The name which should be used for this Security Partner Provider. Changing this forces a new resource to be created.

*   `resourceGroupName` - (Required) The name of the Resource Group where the Security Partner Provider should exist. Changing this forces a new resource to be created.

*   `location` - (Required) The Azure Region where the Security Partner Provider should exist. Changing this forces a new resource to be created.

*   `securityProviderName` - (Required) The security provider name. Possible values are `zScaler`, `iBoss` and `checkpoint` is allowed. Changing this forces a new resource to be created.

*   `virtualHubId` - (Optional) The ID of the Virtual Hub within which this Security Partner Provider should be created. Changing this forces a new resource to be created.

*   `tags` - (Optional) A mapping of tags which should be assigned to the Security Partner Provider.

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the Security Partner Provider.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Security Partner Provider.
* `read` - (Defaults to 5 minutes) Used when retrieving the Security Partner Provider.
* `update` - (Defaults to 30 minutes) Used when updating the Security Partner Provider.
* `delete` - (Defaults to 30 minutes) Used when deleting the Security Partner Provider.

## Import

Security Partner Providers can be imported using the `resourceId`, e.g.

```shell
terraform import azurerm_virtual_hub_security_partner_provider.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/securityPartnerProviders/securityPartnerProvider1
```
