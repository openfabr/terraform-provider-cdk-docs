---
subcategory: "Communication"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_communication_service"
description: |-
  Manages a Communication Service.
---

# azurermCommunicationService

Manages a Communication Service.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example",
  {
    location: "West Europe",
    name: "example-resources",
  }
);
const azurermCommunicationServiceExample =
  new azurerm.communicationService.CommunicationService(this, "example_1", {
    data_location: "United States",
    name: "example-communicationservice",
    resource_group_name: azurermResourceGroupExample.name,
  });
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermCommunicationServiceExample.overrideLogicalId("example");

```

## Arguments Reference

The following arguments are supported:

*   `name` - (Required) The name of the Communication Service resource. Changing this forces a new Communication Service to be created.

*   `resourceGroupName` - (Required) The name of the Resource Group where the Communication Service should exist. Changing this forces a new Communication Service to be created.

***

*   `dataLocation` - (Optional) The location where the Communication service stores its data at rest. Possible values are `africa`, `asiaPacific`, `australia`, `brazil`, `canada`, `europe`, `france`, `germany`, `india`, `japan`, `korea`, `norway`, `switzerland`, `uae`, `uk` and `unitedStates`. Defaults to `unitedStates`. Changing this forces a new Communication Service to be created.

*   `tags` - (Optional) A mapping of tags which should be assigned to the Communication Service.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Communication Service.
* `primaryConnectionString` - The primary connection string of the Communication Service.
* `secondaryConnectionString` - The secondary connection string of the Communication Service.
* `primaryKey` - The primary key of the Communication Service.
* `secondaryKey` - The secondary key of the Communication Service.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Communication Service.
* `read` - (Defaults to 5 minutes) Used when retrieving the Communication Service.
* `update` - (Defaults to 30 minutes) Used when updating the Communication Service.
* `delete` - (Defaults to 30 minutes) Used when deleting the Communication Service.

## Import

Communication Services can be imported using the `resourceId`, e.g.

```console
terraform import azurerm_communication_service.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Communication/communicationServices/communicationService1
```
