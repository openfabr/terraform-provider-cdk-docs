---
subcategory: "Logic App"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_logic_app_workflow"
description: |-
  Manages a Logic App Workflow.
---

# azurermLogicAppWorkflow

Manages a Logic App Workflow.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example",
  {
    location: "West Europe",
    name: "workflow-resources",
  }
);
const azurermLogicAppWorkflowExample =
  new azurerm.logicAppWorkflow.LogicAppWorkflow(this, "example_1", {
    location: azurermResourceGroupExample.location,
    name: "workflow1",
    resource_group_name: azurermResourceGroupExample.name,
  });
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermLogicAppWorkflowExample.overrideLogicalId("example");

```

## Argument Reference

The following arguments are supported:

*   `name` - (Required) Specifies the name of the Logic App Workflow. Changing this forces a new resource to be created.

*   `resourceGroupName` - (Required) The name of the Resource Group in which the Logic App Workflow should be created. Changing this forces a new resource to be created.

*   `location` - (Required) Specifies the supported Azure location where the Logic App Workflow exists. Changing this forces a new resource to be created.

*   `accessControl` - (Optional) A `accessControl` block as defined below.

*   `identity` - (Optional) An `identity` block as defined below.

*   `integrationServiceEnvironmentId` - (Optional) The ID of the Integration Service Environment to which this Logic App Workflow belongs. Changing this forces a new Logic App Workflow to be created.

*   `logicAppIntegrationAccountId` - (Optional) The ID of the integration account linked by this Logic App Workflow.

*   `enabled` - (Optional) Is the Logic App Workflow enabled? Defaults to `true`.

*   `workflowParameters` - (Optional) Specifies a map of Key-Value pairs of the Parameter Definitions to use for this Logic App Workflow. The key is the parameter name, and the value is a JSON encoded string of the parameter definition (see: <https://docs.microsoft.com/azure/logic-apps/logic-apps-workflow-definition-language#parameters>).

*   `workflowSchema` - (Optional) Specifies the Schema to use for this Logic App Workflow. Defaults to `https://schemaManagementAzureCom/providers/microsoftLogic/schemas/20160601/workflowdefinitionJson#`. Changing this forces a new resource to be created.

*   `workflowVersion` - (Optional) Specifies the version of the Schema used for this Logic App Workflow. Defaults to `1000`. Changing this forces a new resource to be created.

*   `parameters` - (Optional) A map of Key-Value pairs.

\-> **NOTE:** Any parameters specified must exist in the Schema defined in `workflowParameters`.

* `tags` - (Optional) A mapping of tags to assign to the resource.

***

A `accessControl` block supports the following:

*   `action` - (Optional) A `action` block as defined below.

*   `content` - (Optional) A `content` block as defined below.

*   `trigger` - (Optional) A `trigger` block as defined below.

*   `workflowManagement` - (Optional) A `workflowManagement` block as defined below.

***

A `action` block supports the following:

* `allowedCallerIpAddressRange` - (Required) A list of the allowed caller IP address ranges.

***

A `content` block supports the following:

* `allowedCallerIpAddressRange` - (Required) A list of the allowed caller IP address ranges.

***

A `trigger` block supports the following:

*   `allowedCallerIpAddressRange` - (Required) A list of the allowed caller IP address ranges.

*   `openAuthenticationPolicy` - (Optional) A `openAuthenticationPolicy` block as defined below.

***

A `workflowManagement` block supports the following:

* `allowedCallerIpAddressRange` - (Required) A list of the allowed caller IP address ranges.

***

A `openAuthenticationPolicy` block supports the following:

*   `name` - (Required) The OAuth policy name for the Logic App Workflow.

*   `claim` - (Required) A `claim` block as defined below.

***

A `claim` block supports the following:

*   `name` - (Required) The name of the OAuth policy claim for the Logic App Workflow.

*   `value` - (Required) The value of the OAuth policy claim for the Logic App Workflow.

***

An `identity` block supports the following:

*   `type` - (Required) Specifies the type of Managed Service Identity that should be configured on this Logic App Workflow. Possible values are `systemAssigned`, `userAssigned`.

*   `identityIds` - (Optional) Specifies a list of User Assigned Managed Identity IDs to be assigned to this Logic App Workflow.

\~> **NOTE:** This is required when `type` is set to `userAssigned`

## Attributes Reference

The following attributes are exported:

*   `id` - The Logic App Workflow ID.

*   `accessEndpoint` - The Access Endpoint for the Logic App Workflow.

*   `connectorEndpointIpAddresses` - The list of access endpoint IP addresses of connector.

*   `connectorOutboundIpAddresses` - The list of outgoing IP addresses of connector.

*   `identity` - An `identity` block as defined below.

*   `workflowEndpointIpAddresses` - The list of access endpoint IP addresses of workflow.

*   `workflowOutboundIpAddresses` - The list of outgoing IP addresses of workflow.

***

The `identity` block exports the following:

*   `principalId` - The Principal ID for the Service Principal associated with the Managed Service Identity of this Logic App Workflow.

*   `tenantId` - The Tenant ID for the Service Principal associated with the Managed Service Identity of this Logic App Workflow.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Logic App Workflow.
* `update` - (Defaults to 30 minutes) Used when updating the Logic App Workflow.
* `read` - (Defaults to 5 minutes) Used when retrieving the Logic App Workflow.
* `delete` - (Defaults to 30 minutes) Used when deleting the Logic App Workflow.

## Import

Logic App Workflows can be imported using the `resourceId`, e.g.

```console
terraform import azurerm_logic_app_workflow.workflow1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Logic/workflows/workflow1
```
