---
subcategory: "Spring Cloud"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_spring_cloud_dev_tool_portal"
description: |-
  Manages a Spring Cloud Dev Tool Portal.
---

# azurermSpringCloudDevToolPortal

\-> **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.

Manages a Spring Cloud Dev Tool Portal.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
new azurerm.provider.AzurermProvider(this, "azurerm", {
  features: [{}],
});
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example",
  {
    location: "West Europe",
    name: "example",
  }
);
const azurermSpringCloudServiceExample =
  new azurerm.springCloudService.SpringCloudService(this, "example_2", {
    location: azurermResourceGroupExample.location,
    name: "example",
    resource_group_name: azurermResourceGroupExample.name,
    sku_name: "E0",
  });
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermSpringCloudServiceExample.overrideLogicalId("example");
const azurermSpringCloudDevToolPortalExample =
  new azurerm.springCloudDevToolPortal.SpringCloudDevToolPortal(
    this,
    "example_3",
    {
      application_accelerator_enabled: true,
      application_live_view_enabled: true,
      name: "default",
      public_network_access_enabled: true,
      spring_cloud_service_id: azurermSpringCloudServiceExample.id,
      sso: [
        {
          client_id: "example id",
          client_secret: "example secret",
          metadata_url: "https://www.example.com/metadata",
          scope: ["openid", "profile", "email"],
        },
      ],
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermSpringCloudDevToolPortalExample.overrideLogicalId("example");

```

## Arguments Reference

The following arguments are supported:

*   `name` - (Required) The name which should be used for this Spring Cloud Dev Tool Portal. The only possible value is `default`. Changing this forces a new Spring Cloud Dev Tool Portal to be created.

*   `springCloudServiceId` - (Required) The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Dev Tool Portal to be created.

***

*   `applicationAcceleratorEnabled` - (Optional) Should the Accelerator plugin be enabled?

*   `applicationLiveViewEnabled` - (Optional) Should the Application Live View be enabled?

*   `publicNetworkAccessEnabled` - (Optional) Is public network access enabled?

*   `sso` - (Optional) A `sso` block as defined below.

***

A `sso` block supports the following:

*   `clientId` - (Optional) Specifies the public identifier for the application.

*   `clientSecret` - (Optional) Specifies the secret known only to the application and the authorization server.

*   `metadataUrl` - (Optional) Specifies the URI of a JSON file with generic OIDC provider configuration.

*   `scope` - (Optional) Specifies a list of specific actions applications can be allowed to do on a user's behalf.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Spring Cloud Dev Tool Portal.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Spring Cloud Dev Tool Portal.
* `read` - (Defaults to 5 minutes) Used when retrieving the Spring Cloud Dev Tool Portal.
* `update` - (Defaults to 30 minutes) Used when updating the Spring Cloud Dev Tool Portal.
* `delete` - (Defaults to 30 minutes) Used when deleting the Spring Cloud Dev Tool Portal.

## Import

Spring Cloud Dev Tool Portals can be imported using the `resourceId`, e.g.

```console
terraform import azurerm_spring_cloud_dev_tool_portal.example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/Spring/service1/DevToolPortals/default
```
