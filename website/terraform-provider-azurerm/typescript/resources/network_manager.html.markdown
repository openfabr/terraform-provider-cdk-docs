---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_network_manager"
description: |-
  Manages a Network Managers.

---

# azurermNetworkManager

Manages a Network Managers.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example",
  {
    location: "West Europe",
    name: "example-resources",
  }
);
const dataAzurermSubscriptionCurrent =
  new azurerm.dataAzurermSubscription.DataAzurermSubscription(
    this,
    "current",
    {}
  );
const azurermNetworkManagerExample = new azurerm.networkManager.NetworkManager(
  this,
  "example_2",
  {
    description: "example network manager",
    location: azurermResourceGroupExample.location,
    name: "example-network-manager",
    resource_group_name: azurermResourceGroupExample.name,
    scope: [
      {
        subscription_ids: [dataAzurermSubscriptionCurrent.id],
      },
    ],
    scope_accesses: ["Connectivity", "SecurityAdmin"],
    tags: {
      foo: "bar",
    },
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermNetworkManagerExample.overrideLogicalId("example");

```

## Arguments Reference

The following arguments are supported:

*   `name` - (Required) Specifies the name which should be used for this Network Managers. Changing this forces a new Network Managers to be created.

*   `resourceGroupName` - (Required) Specifies the name of the Resource Group where the Network Managers should exist. Changing this forces a new Network Managers to be created.

*   `location` - (Required) Specifies the Azure Region where the Network Managers should exist. Changing this forces a new resource to be created.

*   `scope` - (Required) A `scope` block as defined below.

*   `scopeAccesses` - (Required) A list of configuration deployment type. Possible values are `connectivity` and `securityAdmin`, corresponds to if Connectivity Configuration and Security Admin Configuration is allowed for the Network Manager.

*   `description` - (Optional) A description of the network manager.

*   `tags` - (Optional) A mapping of tags which should be assigned to the Network Managers.

***

A `scope` block supports the following:

*   `managementGroupIds` - (Optional) A list of management group IDs.

*   `subscriptionIds` - (Optional) A list of subscription IDs.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

*   `id` - The ID of the Network Managers.

*   `crossTenantScopes` - A `crossTenantScopes` block as defined below.

***

A `crossTenantScopes` block exports the following:

*   `managementGroups` - List of management groups.

*   `subscriptions` - List of subscriptions.

*   `tenantId` - Tenant ID.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Network Managers.
* `read` - (Defaults to 5 minutes) Used when retrieving the Network Managers.
* `update` - (Defaults to 30 minutes) Used when updating the Network Managers.
* `delete` - (Defaults to 30 minutes) Used when deleting the Network Managers.

## Import

Network Managers can be imported using the `resourceId`, e.g.

```console
terraform import azurerm_network_manager.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/networkManagers/networkManager1
```
