---
subcategory: "Data Factory"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_data_factory_integration_runtime_azure"
description: |-
  Manages a Data Factory Azure Integration Runtime.
---

# azurermDataFactoryIntegrationRuntimeAzure

Manages a Data Factory Azure Integration Runtime.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example",
  {
    location: "West Europe",
    name: "example-resources",
  }
);
const azurermDataFactoryExample = new azurerm.dataFactory.DataFactory(
  this,
  "example_1",
  {
    location: azurermResourceGroupExample.location,
    name: "example",
    resource_group_name: azurermResourceGroupExample.name,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermDataFactoryExample.overrideLogicalId("example");
const azurermDataFactoryIntegrationRuntimeAzureExample =
  new azurerm.dataFactoryIntegrationRuntimeAzure.DataFactoryIntegrationRuntimeAzure(
    this,
    "example_2",
    {
      data_factory_id: azurermDataFactoryExample.id,
      location: azurermResourceGroupExample.location,
      name: "example",
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermDataFactoryIntegrationRuntimeAzureExample.overrideLogicalId("example");

```

## Argument Reference

The following arguments are supported:

*   `name` - (Required) Specifies the name of the Managed Integration Runtime. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.

*   `dataFactoryId` - (Required) The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.

*   `location` - (Required) Specifies the supported Azure location where the resource exists. Use `autoResolve` to create an auto-resolve integration runtime. Changing this forces a new resource to be created.

*   `description` - (Optional) Integration runtime description.

*   `cleanupEnabled` - (Optional) Cluster will not be recycled and it will be used in next data flow activity run until TTL (time to live) is reached if this is set as `false`. Default is `true`.

*   `computeType` - (Optional) Compute type of the cluster which will execute data flow job. Valid values are `general`, `computeOptimized` and `memoryOptimized`. Defaults to `general`.

*   `coreCount` - (Optional) Core count of the cluster which will execute data flow job. Valid values are `8`, `16`, `32`, `48`, `80`, `144` and `272`. Defaults to `8`.

*   `timeToLiveMin` - (Optional) Time to live (in minutes) setting of the cluster which will execute data flow job. Defaults to `0`.

*   `virtualNetworkEnabled` - (Optional) Is Integration Runtime compute provisioned within Managed Virtual Network? Changing this forces a new resource to be created.

***

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `read` - (Defaults to 5 minutes) Used when retrieving the Data Factory Integration Runtime Azure.
* `create` - (Defaults to 30 minutes) Used when creating the Data Factory Integration Runtime Azure.
* `update` - (Defaults to 30 minutes) Used when updating the Data Factory Integration Runtime Azure.
* `delete` - (Defaults to 30 minutes) Used when deleting the Data Factory Integration Runtime Azure.

## Import

Data Factory Azure Integration Runtimes can be imported using the `resourceId`, e.g.

```console
terraform import azurerm_data_factory_integration_runtime_azure.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.DataFactory/factories/example/integrationruntimes/example
```
