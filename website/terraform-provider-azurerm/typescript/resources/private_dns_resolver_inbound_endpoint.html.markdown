---
subcategory: "Private DNS Resolver"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_private_dns_resolver_inbound_endpoint"
description: |-
  Manages a Private DNS Resolver Inbound Endpoint.
---

# azurermPrivateDnsResolverInboundEndpoint

Manages a Private DNS Resolver Inbound Endpoint.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example",
  {
    location: "West Europe",
    name: "example-resources",
  }
);
const azurermSubnetExample = new azurerm.subnet.Subnet(this, "example_1", {
  address_prefixes: ["10.0.0.0/28"],
  delegation: [
    {
      name: "Microsoft.Network.dnsResolvers",
      service_delegation: [
        {
          actions: ["Microsoft.Network/virtualNetworks/subnets/join/action"],
          name: "Microsoft.Network/dnsResolvers",
        },
      ],
    },
  ],
  name: "inbounddns",
  resource_group_name: "${azurerm_resource_group.test.name}",
  virtual_network_name: "${azurerm_virtual_network.test.name}",
});
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermSubnetExample.overrideLogicalId("example");
const azurermVirtualNetworkExample = new azurerm.virtualNetwork.VirtualNetwork(
  this,
  "example_2",
  {
    address_space: ["10.0.0.0/16"],
    location: azurermResourceGroupExample.location,
    name: "example",
    resource_group_name: azurermResourceGroupExample.name,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermVirtualNetworkExample.overrideLogicalId("example");
new azurerm.privateDnsResolver.PrivateDnsResolver(this, "test", {
  location: azurermResourceGroupExample.location,
  name: "example",
  resource_group_name: azurermResourceGroupExample.name,
  virtual_network_id: azurermVirtualNetworkExample.id,
});
const azurermPrivateDnsResolverInboundEndpointExample =
  new azurerm.privateDnsResolverInboundEndpoint.PrivateDnsResolverInboundEndpoint(
    this,
    "example_4",
    {
      ip_configurations: [
        {
          private_ip_allocation_method: "Dynamic",
          subnet_id: azurermSubnetExample.id,
        },
      ],
      location: "${azurerm_private_dns_resolver.example.location}",
      name: "example-drie",
      private_dns_resolver_id: "${azurerm_private_dns_resolver.example.id}",
      tags: {
        key: "value",
      },
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermPrivateDnsResolverInboundEndpointExample.overrideLogicalId("example");

```

## Arguments Reference

The following arguments are supported:

*   `name` - (Required) Specifies the name which should be used for this Private DNS Resolver Inbound Endpoint. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.

*   `privateDnsResolverId` - (Required) Specifies the ID of the Private DNS Resolver Inbound Endpoint. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.

*   `ipConfigurations` - (Required) Can be specified multiple times to define multiple IP configurations. Each `ipConfigurations` block as defined below.

*   `location` - (Required) Specifies the Azure Region where the Private DNS Resolver Inbound Endpoint should exist. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.

*   `tags` - (Optional) A mapping of tags which should be assigned to the Private DNS Resolver Inbound Endpoint.

***

An `ipConfigurations` block supports the following:

*   `privateIpAllocationMethod` - (Optional) Private IP address allocation method. Allowed value is `dynamic`. Defaults to `dynamic`.

*   `subnetId` - (Required) The subnet ID of the IP configuration.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Private DNS Resolver Inbound Endpoint.

***

An `ipConfigurations` block exports the following:

* `privateIpAddress` - Private IP address of the IP configuration.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Private DNS Resolver Inbound Endpoint.
* `read` - (Defaults to 5 minutes) Used when retrieving the Private DNS Resolver Inbound Endpoint.
* `update` - (Defaults to 30 minutes) Used when updating the Private DNS Resolver Inbound Endpoint.
* `delete` - (Defaults to 30 minutes) Used when deleting the Private DNS Resolver Inbound Endpoint.

## Import

Private DNS Resolver Inbound Endpoint can be imported using the `resourceId`, e.g.

```console
terraform import azurerm_private_dns_resolver_inbound_endpoint.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/dnsResolvers/dnsResolver1/inboundEndpoints/inboundEndpoint1
```
