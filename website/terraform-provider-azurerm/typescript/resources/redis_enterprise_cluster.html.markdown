---
subcategory: "Redis Enterprise"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_redis_enterprise_cluster"
description: |-
  Manages a Redis Enterprise Cluster.
---

# azurermRedisEnterpriseCluster

Manages a Redis Enterprise Cluster.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example",
  {
    location: "West Europe",
    name: "example-redisenterprise",
  }
);
const azurermRedisEnterpriseClusterExample =
  new azurerm.redisEnterpriseCluster.RedisEnterpriseCluster(this, "example_1", {
    location: azurermResourceGroupExample.location,
    name: "example-redisenterprise",
    resource_group_name: azurermResourceGroupExample.name,
    sku_name: "EnterpriseFlash_F300-3",
  });
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermRedisEnterpriseClusterExample.overrideLogicalId("example");

```

## Arguments Reference

The following arguments are supported:

*   `name` - (Required) The name which should be used for this Redis Enterprise Cluster. Changing this forces a new Redis Enterprise Cluster to be created.

*   `resourceGroupName` - (Required) The name of the Resource Group where the Redis Enterprise Cluster should exist. Changing this forces a new Redis Enterprise Cluster to be created.

*   `location` - (Required) The Azure Region where the Redis Enterprise Cluster should exist. Changing this forces a new Redis Enterprise Cluster to be created.

*   `skuName` - (Required) The `skuName` is comprised of two segments separated by a hyphen (e.g. `enterpriseE102`). The first segment of the `skuName` defines the `name` of the SKU, possible values are `enterpriseE10`, `enterpriseE20"`, `enterpriseE50`, `enterpriseE100`, `enterpriseFlashF300`, `enterpriseFlashF700` or `enterpriseFlashF1500`. The second segment defines the `capacity` of the `skuName`, possible values for `enteprise` SKUs are (`2`, `4`, `6`, ...). Possible values for `enterpriseFlash` SKUs are (`3`, `9`, `15`, ...). Changing this forces a new Redis Enterprise Cluster to be created.

*   `minimumTlsVersion` - (Optional) The minimum TLS version. Possible values are `10`, `11` and `12`. Defaults to `12`. Changing this forces a new Redis Enterprise Cluster to be created.

*   `zones` - (Optional) Specifies a list of Availability Zones in which this Redis Enterprise Cluster should be located. Changing this forces a new Redis Enterprise Cluster to be created.

*   `tags` - (Optional) A mapping of tags which should be assigned to the Redis Enterprise Cluster.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

*   `id` - The ID of the Redis Enterprise Cluster.

*   `hostname` - DNS name of the cluster endpoint.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Redis Enterprise Cluster.
* `read` - (Defaults to 5 minutes) Used when retrieving the Redis Enterprise Cluster.
* `update` - (Defaults to 30 minutes) Used when updating the Redis Enterprise Cluster.
* `delete` - (Defaults to 30 minutes) Used when deleting the Redis Enterprise Cluster.

## Import

Redis Enterprise Clusters can be imported using the `resourceId`, e.g.

```console
terraform import azurerm_redis_enterprise_cluster.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Cache/redisEnterprise/cluster1
```
