---
subcategory: "Databricks"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_databricks_access_connector"
description: |-
  Manages a Databricks Access Connector
---

# azurermDatabricksAccessConnector

Manages a Databricks Access Connector

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example",
  {
    location: "West Europe",
    name: "example-resources",
  }
);
const azurermDatabricksAccessConnectorExample =
  new azurerm.databricksAccessConnector.DatabricksAccessConnector(
    this,
    "example_1",
    {
      identity: [
        {
          type: "SystemAssigned",
        },
      ],
      location: azurermResourceGroupExample.location,
      name: "databrickstest",
      resource_group_name: azurermResourceGroupExample.name,
      tags: {
        Environment: "Production",
      },
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermDatabricksAccessConnectorExample.overrideLogicalId("example");

```

## Argument Reference

The following arguments are supported:

*   `name` - (Required) Specifies the name of the Databricks Access Connector resource. Changing this forces a new resource to be created.

*   `resourceGroupName` - (Required) The name of the Resource Group in which the Databricks Access Connector should exist. Changing this forces a new resource to be created.

*   `location` - (Required) Specifies the supported Azure location where the resource has to be created. Changing this forces a new resource to be created.

*   `identity` - (Optional) An `identity` block as defined below.

*   `tags` - (Optional) A mapping of tags to assign to the resource.

***

An `identity` block supports the following:

* `type` - (Required) The type of identity to use for this Access Connector. `systemAssigned` is the only possible value.

## Attributes Reference

The following attributes are exported:

*   `id` - The ID of the Databricks Access Connector in the Azure management plane.

*   `identity` - A list of `identity` blocks containing the system-assigned managed identities as defined below.

***

An `identity` block exports the following:

*   `type` - The type of identity.

*   `principalId` - The Principal ID associated with this system-assigned managed identity.

*   `tenantId` - The Tenant ID associated with this system-assigned managed identity.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 5 minutes) Used when creating the Databricks Access Connector.
* `update` - (Defaults to 5 minutes) Used when updating the Databricks Access Connector.
* `read` - (Defaults to 5 minutes) Used when retrieving the Databricks Access Connector.
* `delete` - (Defaults to 30 minutes) Used when deleting the Databricks Access Connector.

## Import

Databricks Access Connectors can be imported using the `resourceId`, e.g.

```console
terraform import azurerm_databricks_access_connector.connector1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Databricks/accessConnectors/connector1
```
