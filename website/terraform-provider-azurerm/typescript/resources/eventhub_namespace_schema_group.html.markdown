---
subcategory: "Messaging"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_eventhub_namespace_schema_group"
description: |-
  Manages a Schema Group for a EventHub Namespace.
---

# azurermEventhubNamespaceSchemaGroup

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
const azurermEventhubNamespaceTest =
  new azurerm.eventhubNamespace.EventhubNamespace(this, "test", {
    location: "${azurerm_resource_group.test.location}",
    name: "example-ehn-schemaGroup",
    resource_group_name: "${azurerm_resource_group.test.name}",
    sku: "Standard",
  });
const azurermEventhubNamespaceSchemaGroupTest =
  new azurerm.eventhubNamespaceSchemaGroup.EventhubNamespaceSchemaGroup(
    this,
    "test_1",
    {
      name: "example-schemaGroup",
      namespace_id: azurermEventhubNamespaceTest.id,
      schema_compatibility: "Forward",
      schema_type: "Avro",
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermEventhubNamespaceSchemaGroupTest.overrideLogicalId("test");
new azurerm.resourceGroup.ResourceGroup(this, "example", {
  location: "East US",
  name: "exampleRG-ehn-schemaGroup",
});

```

## Arguments Reference

The following arguments are supported:

*   `name` - (Required) Specifies the name of this schema group. Changing this forces a new resource to be created.

*   `namespaceId` - (Required) Specifies the ID of the EventHub Namespace. Changing this forces a new resource to be created.

*   `schemaCompatibility` - (Required) Specifies the compatibility of this schema group. Possible values are `none`, `backward`, `forward`. Changing this forces a new resource to be created.

*   `schemaType` - (Required) Specifies the Type of this schema group. Possible values are `avro`, `unknown`. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the EventHub Namespace Schema Group.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the EventHub Namespace Schema Group.
* `read` - (Defaults to 5 minutes) Used when retrieving the EventHub Namespace Schema Group.
* `delete` - (Defaults to 30 minutes) Used when deleting the EventHub Namespace Schema Group.

## Import

Schema Group for a EventHub Namespace can be imported using the `resourceId`, e.g.

```console
terraform import azurerm_eventhub_namespace_schema_group.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.EventHub/namespaces/namespace1/schemaGroups/group1
```
