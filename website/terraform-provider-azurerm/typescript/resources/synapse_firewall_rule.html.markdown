---
subcategory: "Synapse"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_synapse_firewall_rule"
description: |-
  Manages a Synapse Firewall Rule.
---

# azurermSynapseFirewallRule

Allows you to Manages a Synapse Firewall Rule.

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example",
  {
    location: "West Europe",
    name: "example-resources",
  }
);
const azurermStorageAccountExample = new azurerm.storageAccount.StorageAccount(
  this,
  "example_1",
  {
    account_kind: "StorageV2",
    account_replication_type: "LRS",
    account_tier: "Standard",
    is_hns_enabled: "true",
    location: azurermResourceGroupExample.location,
    name: "examplestorageacc",
    resource_group_name: azurermResourceGroupExample.name,
  }
);
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermStorageAccountExample.overrideLogicalId("example");
const azurermStorageDataLakeGen2FilesystemExample =
  new azurerm.storageDataLakeGen2Filesystem.StorageDataLakeGen2Filesystem(
    this,
    "example_2",
    {
      name: "example",
      storage_account_id: azurermStorageAccountExample.id,
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermStorageDataLakeGen2FilesystemExample.overrideLogicalId("example");
const azurermSynapseWorkspaceExample =
  new azurerm.synapseWorkspace.SynapseWorkspace(this, "example_3", {
    identity: [
      {
        type: "SystemAssigned",
      },
    ],
    location: azurermResourceGroupExample.location,
    name: "example",
    resource_group_name: azurermResourceGroupExample.name,
    sql_administrator_login: "sqladminuser",
    sql_administrator_login_password: "H@Sh1CoR3!",
    storage_data_lake_gen2_filesystem_id:
      azurermStorageDataLakeGen2FilesystemExample.id,
  });
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermSynapseWorkspaceExample.overrideLogicalId("example");
const azurermSynapseFirewallRuleExample =
  new azurerm.synapseFirewallRule.SynapseFirewallRule(this, "example_4", {
    end_ip_address: "255.255.255.255",
    name: "AllowAll",
    start_ip_address: "0.0.0.0",
    synapse_workspace_id: azurermSynapseWorkspaceExample.id,
  });
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermSynapseFirewallRuleExample.overrideLogicalId("example");

```

## Argument Reference

The following arguments are supported:

*   `name` - (Required) The Name of the firewall rule. Changing this forces a new resource to be created.

*   `synapseWorkspaceId` - (Required) The ID of the Synapse Workspace on which to create the Firewall Rule. Changing this forces a new resource to be created.

*   `startIpAddress` - (Required) The starting IP address to allow through the firewall for this rule.

*   `endIpAddress` - (Required) The ending IP address to allow through the firewall for this rule.

\-> **NOTE:** The Azure feature `allowAccessToAzureServices` can be enabled by setting `startIpAddress` and `endIpAddress` to `0000`.

\-> **NOTE:** The Azure feature `allowAccessToAzureServices` requires the `name` to be `allowAllWindowsAzureIps`.

## Attributes Reference

The following attributes are exported:

* `id` - The Synapse Firewall Rule ID.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Synapse Firewall Rule.
* `update` - (Defaults to 30 minutes) Used when updating the Synapse Firewall Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the Synapse Firewall Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the Synapse Firewall Rule.

## Import

Synapse Firewall Rule can be imported using the `resourceId`, e.g.

```console
terraform import azurerm_synapse_firewall_rule.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourcegroup1/providers/Microsoft.Synapse/workspaces/workspace1/firewallRules/rule1
```
