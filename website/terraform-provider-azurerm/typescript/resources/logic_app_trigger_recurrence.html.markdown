---
subcategory: "Logic App"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_logic_app_trigger_recurrence"
description: |-
  Manages a Recurrence Trigger within a Logic App Workflow
---

# azurermLogicAppTriggerRecurrence

Manages a Recurrence Trigger within a Logic App Workflow

## Example Usage

```typescript
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
  this,
  "example",
  {
    location: "West Europe",
    name: "workflow-resources",
  }
);
const azurermLogicAppWorkflowExample =
  new azurerm.logicAppWorkflow.LogicAppWorkflow(this, "example_1", {
    location: azurermResourceGroupExample.location,
    name: "workflow1",
    resource_group_name: azurermResourceGroupExample.name,
  });
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermLogicAppWorkflowExample.overrideLogicalId("example");
const azurermLogicAppTriggerRecurrenceExample =
  new azurerm.logicAppTriggerRecurrence.LogicAppTriggerRecurrence(
    this,
    "example_2",
    {
      frequency: "Day",
      interval: 1,
      logic_app_id: azurermLogicAppWorkflowExample.id,
      name: "run-every-day",
    }
  );
/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
azurermLogicAppTriggerRecurrenceExample.overrideLogicalId("example");

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Recurrence Triggers to be created within the Logic App Workflow. Changing this forces a new resource to be created.

\-> **NOTE:** This name must be unique across all Triggers within the Logic App Workflow.

*   `logicAppId` - (Required) Specifies the ID of the Logic App Workflow. Changing this forces a new resource to be created.

*   `frequency` - (Required) Specifies the Frequency at which this Trigger should be run. Possible values include `month`, `week`, `day`, `hour`, `minute` and `second`.

*   `interval` - (Required) Specifies interval used for the Frequency, for example a value of `4` for `interval` and `hour` for `frequency` would run the Trigger every 4 hours.

*   `startTime` - (Optional) Specifies the start date and time for this trigger in RFC3339 format: `20000102T03:04:05Z`.

*   `timeZone` - (Optional) Specifies the time zone for this trigger. Supported time zone options are listed [here](https://support.microsoft.com/en-us/help/973627/microsoft-time-zone-index-values)

*   `schedule` - (Optional) A `schedule` block as specified below.

***

A `schedule` block supports the following:

*   `atTheseMinutes` - (Optional) Specifies a list of minutes when the trigger should run. Valid values are between 0 and 59.

*   `atTheseHours` - (Optional) Specifies a list of hours when the trigger should run. Valid values are between 0 and 23.

*   `onTheseDays` - (Optional) Specifies a list of days when the trigger should run. Valid values include `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`, and `sunday`.

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the Recurrence Trigger within the Logic App Workflow.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Logic App Recurrence Trigger.
* `update` - (Defaults to 30 minutes) Used when updating the Logic App Recurrence Trigger.
* `read` - (Defaults to 5 minutes) Used when retrieving the Logic App Recurrence Trigger.
* `delete` - (Defaults to 30 minutes) Used when deleting the Logic App Recurrence Trigger.

## Import

Logic App Recurrence Triggers can be imported using the `resourceId`, e.g.

```console
terraform import azurerm_logic_app_trigger_recurrence.daily /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Logic/workflows/workflow1/triggers/daily
```

\-> **NOTE:** This ID is unique to Terraform and doesn't directly match to any other resource. To compose this ID, you can take the ID Logic App Workflow and append `/triggers/{nameOfTheTrigger}`.
