---
subcategory: "Spring Cloud"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_spring_cloud_service"
description: |-
  Gets information about an existing Spring Cloud Service
---

# Data Source: azurermSpringCloudService

Use this data source to access information about an existing Spring Cloud Service.

## Example Usage

```typescript
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
/*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azurerm.
For a more precise conversion please use the --provider flag in convert.*/
new azurerm.provider.AzurermProvider(this, "azurerm", {
  features: [{}],
});
const dataAzurermSpringCloudServiceExample =
  new azurerm.dataAzurermSpringCloudService.DataAzurermSpringCloudService(
    this,
    "example",
    {
      name: "${azurerm_spring_cloud_service.example.name}",
      resource_group_name:
        "${azurerm_spring_cloud_service.example.resource_group_name}",
    }
  );
new cdktf.TerraformOutput(this, "spring_cloud_service_id", {
  value: dataAzurermSpringCloudServiceExample.id,
});

```

## Argument Reference

The following arguments are supported:

*   `name` - (Required) Specifies The name of the Spring Cloud Service resource.

*   `resourceGroupName` - (Required) Specifies the name of the Resource Group where the Spring Cloud Service exists.

## Attributes Reference

The following attributes are exported:

*   `id` - The ID of Spring Cloud Service.

*   `configServerGitSetting` - A `configServerGitSetting` block as defined below.

*   `location` - The location of Spring Cloud Service.

*   `outboundPublicIpAddresses` - A list of the outbound Public IP Addresses used by this Spring Cloud Service.

*   `requiredNetworkTrafficRules` - A list of `requiredNetworkTrafficRules` blocks as defined below.

*   `tags` - A mapping of tags assigned to Spring Cloud Service.

***

The `configServerGitSetting` block supports the following:

*   `uri` - The URI of the Git repository

*   `label` - The default label of the Git repository, which is a branch name, tag name, or commit-id of the repository

*   `searchPaths` - An array of strings used to search subdirectories of the Git repository.

*   `httpBasicAuth` - A `httpBasicAuth` block as defined below.

*   `sshAuth` - A `sshAuth` block as defined below.

*   `repository` - One or more `repository` blocks as defined below.

***

The `repository` block contains the following:

*   `name` - The name to identify on the Git repository.

*   `pattern` - An array of strings used to match an application name. For each pattern, use the `{application}/{profile}` format with wildcards.

*   `uri` - The URI of the Git repository

*   `label` - The default label of the Git repository, which is a branch name, tag name, or commit-id of the repository

*   `searchPaths` - An array of strings used to search subdirectories of the Git repository.

*   `httpBasicAuth` - A `httpBasicAuth` block as defined below.

*   `sshAuth` - A `sshAuth` block as defined below.

***

The `httpBasicAuth` block supports the following:

*   `username` - The username used to access the HTTP Basic Authentication Git repository server.

*   `password` - The password used to access the HTTP Basic Authentication Git repository server.

***

The `sshAuth` block supports the following:

*   `privateKey` - The SSH private key to access the Git repository, needed when the URI starts with `git@` or `ssh://`.

*   `hostKey` - The host key of the Git repository server.

*   `hostKeyAlgorithm` - The host key algorithm.

*   `strictHostKeyCheckingEnabled` - Indicates whether the Config Server instance will fail to start if the host\_key does not match.

***

The `requiredNetworkTrafficRules` supports the following:

*   `direction` - The direction of required traffic. Possible values are `inbound`, `outbound`.

*   `fqdns` - The FQDN list of required traffic.

*   `ipAddresses` - The IP list of required traffic.

*   `port` - The port of required traffic.

*   `protocol` - The protocol of required traffic.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `read` - (Defaults to 5 minutes) Used when retrieving the Spring Cloud Service.
